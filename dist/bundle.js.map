{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/Fuel.tsx","webpack:///./src/components/Modal.tsx","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/MPGCalculator.tsx","webpack:///./src/components/helpers.tsx","webpack:///./src/components/InfoBox.tsx","webpack:///./src/components/GraphControls.tsx","webpack:///./src/components/Tabs.tsx","webpack:///./src/components/Table.tsx","webpack:///./src/components/Car.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","FuelType","InfoBox_1","fuelString","type","regular","mid","premium","diesel","GasPriceChangerRow","_super","__extends","render","createElement","className","htmlFor","this","props","id","toString","step","min","onChange","fuelPrice","Component","GasPriceChanger","_this","handleSubmit","state","updateable","ppg","temp_ppg","Map","event","temp","targetKey","parseInt","target","set","setState","newPpg","parseFloat","updateGasPrice","preventDefault","updateButton","disabled","InfoBox","title","onSubmit","Modal","visible","closeModal","handleClick","componentDidUpdate","prevProps","triggerButton","submit","modalStyle","display","triggerText","onClick","form","formName","buttonName","style","tabIndex","role","data-dismiss","aria-label","aria-hidden","children","ReactDOM","MPGCalculator_1","Car_1","Fuel_1","cars","Car","mpg","price","fuelType","insurance","registration","MpgCalculator","data","document","getElementById","Helpers","GraphControls_1","Tabs_1","Table_1","Graph","componentDidMount","updateChart","c3","generate","bindto","makeData","axis","x","label","y","graphData","columns","Array","concat","range","months","car","monthlyMileage","annualMileage","cost","push","costToDriveMonth","activeTab","updateMileage","updateMonths","addCar","removeAll","removeCar","setActive","_ppg","mileage","_months","j","body","width","alignContent","flexDirection","MileageChanger","MonthChanger","Table","Tabs","items","activeItem","CarList","lo","hi","ret","money","dollars","toFixed","Modal_1","modalVisible","float","handleChange","_mileage","max","Math","round","TabItem","data-name","newTab","dataset","map","helpers_1","colSpan","costToDriveGasOnly","miles","CarListing","onMouseEnter","hoverOver","onMouseOut","hoverOut","activeCar","carInfo","CarAdder","error","new_value","isNaN","fuelOption","errorMessage","required"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = React;","import * as React from \"react\";\r\nimport { Modal } from \"./Modal\";\r\nimport { InfoBox } from \"./InfoBox\";\r\n\r\nexport enum FuelType {\r\n    regular,\r\n    mid,\r\n    premium,\r\n    diesel\r\n}\r\n\r\nexport function fuelString(type: FuelType) {\r\n    switch (type) {\r\n        case FuelType.regular:\r\n            return \"Regular (87)\";\r\n        case FuelType.mid:\r\n            return \"Mid-Grade (89)\";\r\n        case FuelType.premium:\r\n            return \"Premium (92)\";\r\n        case FuelType.diesel:\r\n            return \"Diesel\";  \r\n    }\r\n}\r\n\r\nexport type FuelPrice = Map<FuelType, number>;\r\n\r\ninterface GasPriceProps {\r\n    ppg: FuelPrice;   // change\r\n    updateGasPrice: any; // change\r\n}\r\n\r\nclass GasPriceChangerRow extends React.Component<\r\n    {id: FuelType, fuelPrice: string, onChange: any} ,{}\r\n>    {\r\n    render() {\r\n        return <div className=\"form-group row\">\r\n            <label\r\n                htmlFor={this.props.id.toString()}\r\n                className=\"col-sm col-form-label\">\r\n                {fuelString(this.props.id)}\r\n            </label>\r\n            <div className=\"col-sm-8\">\r\n                <input className=\"form-control\"\r\n                    name={fuelString(this.props.id)}\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    id={this.props.id.toString()}\r\n                    onChange={this.props.onChange}\r\n                    value={this.props.fuelPrice}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface GasPriceState {\r\n    updateable: boolean;\r\n    ppg: FuelPrice;\r\n    temp_ppg: Map<FuelType, string>;\r\n}\r\n\r\nexport class GasPriceChanger extends React.Component<\r\n    GasPriceProps, GasPriceState> {\r\n    constructor(props: GasPriceProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            updateable: false,\r\n            ppg: props.ppg,\r\n            temp_ppg: new Map([\r\n                [FuelType.regular, props.ppg.get(0).toString()],\r\n                [FuelType.mid, props.ppg.get(1).toString()],\r\n                [FuelType.premium, props.ppg.get(2).toString()],\r\n                [FuelType.diesel, props.ppg.get(3).toString()]\r\n            ]),\r\n        };\r\n    }\r\n\r\n    onChange(event) {\r\n        var temp = this.state.temp_ppg;\r\n        let targetKey: FuelType = parseInt(event.target.id);\r\n        temp.set(targetKey, event.target.value);\r\n\r\n        this.setState({\r\n            updateable: true,\r\n            temp_ppg: temp\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        /* \"Update\" button pressed */\r\n\r\n        // Pass updated prices back up to MpgCalculator\r\n        let newPpg: FuelPrice = new Map([\r\n            [FuelType.regular, parseFloat(this.state.temp_ppg.get(FuelType.regular))],\r\n            [FuelType.mid, parseFloat(this.state.temp_ppg.get(FuelType.mid))],\r\n            [FuelType.premium, parseFloat(this.state.temp_ppg.get(FuelType.premium))],\r\n            [FuelType.diesel, parseFloat(this.state.temp_ppg.get(FuelType.diesel))]\r\n        ]);\r\n\r\n        this.props.updateGasPrice(newPpg);\r\n        event.preventDefault(); // Prevent submit from reloading page\r\n\r\n        // Disable update button\r\n        this.setState({\r\n            updateable: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let updateButton;\r\n        if (this.state.updateable)\r\n            updateButton = <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\">Update</button>;\r\n        else\r\n            updateButton = <button\r\n                className=\"btn btn-primary disabled\" disabled>Update</button>;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    Price of Gas <InfoBox\r\n                        title=\"Good to Know: Fuel\">\r\n                        <p>\r\n                            While there may be benefits to using mid-grade (sometimes labelled \"Plus\") or premium fuel,\r\n                            most consumer vehicles in the US will run just fine on regular unleaded. Generally speaking,\r\n                            it is best to follow the recommendations in your owner's manual.\r\n                        </p>\r\n                    </InfoBox>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.regular}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.regular)}\r\n                        onChange={this.onChange} />\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.mid}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.mid)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.premium}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.premium)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.diesel}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.diesel)}\r\n                        onChange={this.onChange}\r\n                        />\r\n\r\n                    {updateButton}\r\n                    </form>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface ModalProps {\r\n    submit?: {\r\n        buttonName: string;\r\n        formName: string;\r\n    };\r\n    children?: any;\r\n    title: string;\r\n    triggerText?: string;\r\n    visible: boolean;\r\n}\r\n\r\ninterface ModalState {\r\n    visible: boolean;\r\n}\r\n\r\nexport class Modal extends React.Component<ModalProps, ModalState> {\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: this.props.visible\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Update state to reflect visibility prop\r\n        if (prevProps.visible != this.props.visible) {\r\n            this.setState({\r\n                visible: this.props.visible\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        if (this.state.visible)\r\n            this.setState({\r\n                visible: false\r\n            });\r\n        else\r\n            this.setState({\r\n                visible: true\r\n            });\r\n    }\r\n\r\n    closeModal(event) {\r\n        // Handle close button events\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let modalStyle = {};\r\n        if (this.state.visible) {\r\n            modalStyle = {\r\n                display: 'block'\r\n            };\r\n        }\r\n\r\n        let triggerButton;\r\n        if (this.props.triggerText !== null) {\r\n            triggerButton = <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.handleClick}>\r\n                {this.props.triggerText}\r\n            </button>;\r\n        }\r\n\r\n        var submit;\r\n        if (this.props.submit) {\r\n            submit = <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                form={this.props.submit.formName}>\r\n                {this.props.submit.buttonName}\r\n            </button>\r\n        }\r\n\r\n        return <div style={{ display: 'inline' }}>\r\n        <div className=\"modal\" style={modalStyle} tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">{this.props.title}</h5>\r\n                        <button type=\"button\" className=\"close\" onClick={this.closeModal} data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {this.props.children}\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            {submit}\r\n                            <button type=\"button\" onClick={this.closeModal} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            {triggerButton}\r\n        </div>;\r\n    }   \r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { MpgCalculator } from \"./components/MPGCalculator\"\r\nimport { Car } from \"./components/Car\"\r\nimport { FuelType } from \"./components/Fuel\"\r\n\r\nlet cars: Array<Car> = [\r\n    new Car({\r\n        'name': '2018 Ford F-150',\r\n        'mpg': 23,\r\n        'price': 27705,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Chevrolet Silverado 1500',\r\n        'mpg': 21,\r\n        'price': 28300,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Ram 1500',\r\n        'mpg': 23,\r\n        'price': 27295,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Toyota RAV4',\r\n        'mpg': 26,\r\n        'price': 24660,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Nissan Rogue',\r\n        'mpg': 29,\r\n        'price': 24800,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Toyota Camry',\r\n        'mpg': 34,\r\n        'price': 23645,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n];\r\n\r\nReactDOM.render(\r\n    <MpgCalculator data={cars} />,\r\n    document.getElementById('root')\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\nimport * as Helpers from \"./helpers\";\r\nimport { FuelType, FuelPrice, GasPriceChanger } from \"./Fuel\";\r\nimport { MileageChanger, MonthChanger } from \"./GraphControls\";\r\nimport { Tabs } from \"./Tabs\";\r\nimport { Table } from \"./Table\";\r\nimport { Car, CarList } from \"./Car\";\r\ndeclare var c3: any;\r\ndeclare var d3: any;\r\n\r\ninterface GraphProps {\r\n    months: number;\r\n    annualMileage: number;\r\n    ppg: FuelPrice;\r\n    data: Array<Car>;\r\n}\r\n\r\ninterface GraphData {\r\n    x: string;\r\n    columns: Array< Array<number|string> >;\r\n};\r\n\r\nclass Graph extends React.Component<GraphProps> {\r\n    componentDidMount() {\r\n        // Force a render() call which will allow chart to show up\r\n        // Without this, react will call c3.generate() before #chart has been created,\r\n        // meaning that there is no HTML dom element to bind graph to, so it won't show.\r\n        this.updateChart();\r\n    }\r\n\r\n    updateChart() {\r\n        c3.generate({\r\n            bindto: '#chart',\r\n            data: this.makeData(this.props.data),\r\n            axis: {\r\n                x: {\r\n                    label: 'Months Driven'\r\n                },\r\n                y: {\r\n                    label: 'Cost'\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    makeData(data: Array<Car>) {\r\n        // Process car data and generate cost of ownership\r\n        let graphData: GraphData = {\r\n            x: 'x', // Mile increments\r\n            columns: [\r\n                Array<number | string>('x').concat(\r\n                    Helpers.range(0, this.props.months)),\r\n            ]\r\n        };\r\n        \r\n        for (var i in data) {\r\n            const car = data[i];\r\n            const monthlyMileage = this.props.annualMileage / 12;\r\n\r\n            let cost: Array<any> = [\r\n                car.name\r\n            ];\r\n            \r\n            // Cost of car at months[j] months\r\n            for (var m = 0; m < this.props.months; m++) {\r\n                cost.push(car.costToDriveMonth(\r\n                    monthlyMileage, m, this.props.ppg));\r\n            }\r\n            \r\n            graphData.columns.push(cost);\r\n        }\r\n        \r\n        return graphData;\r\n    }\r\n    \r\n    render() {\r\n        this.updateChart();\r\n        return <div id=\"chart\"></div>\r\n    }\r\n}\r\n\r\n// Overall controller for all other components\r\nexport interface MpgCalculatorProps {\r\n    data: Array<Car>;\r\n};\r\n\r\nexport interface MpgCalculatorState {\r\n    data: Array<Car>;\r\n    ppg: FuelPrice;\r\n    months: number;\r\n    annualMileage: number;\r\n    activeTab: string;\r\n};\r\n\r\nexport class MpgCalculator extends React.Component<MpgCalculatorProps, MpgCalculatorState> {\r\n    constructor(props: MpgCalculatorProps) {\r\n        super(props);\r\n\r\n        let temp_ppg: FuelPrice = new Map([\r\n            [FuelType.regular, 2.87],\r\n            [FuelType.mid, 3.15],\r\n            [FuelType.premium, 3.4],\r\n            [FuelType.diesel, 3.18]\r\n        ]);\r\n        \r\n        this.state = {\r\n            data: props.data,\r\n            ppg: temp_ppg,\r\n            months: 48,\r\n            annualMileage: 12000,\r\n            activeTab: \"Chart\"\r\n        };\r\n\r\n        this.updateGasPrice = this.updateGasPrice.bind(this);\r\n        this.updateMileage = this.updateMileage.bind(this);\r\n        this.updateMonths = this.updateMonths.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n        this.removeAll = this.removeAll.bind(this);\r\n        this.removeCar = this.removeCar.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n    \r\n    updateGasPrice(_ppg: FuelPrice) {\r\n        this.setState({\r\n            ppg: _ppg\r\n        });\r\n    }\r\n\r\n    updateMileage(mileage: number) {\r\n        this.setState({\r\n            annualMileage: mileage\r\n        });\r\n    }\r\n\r\n    updateMonths(_months: number) {\r\n        this.setState({\r\n            months: _months\r\n        });\r\n    }\r\n    \r\n    addCar(data: Car) {\r\n        // Add car listing\r\n        // Returns false if car with same name already exists\r\n\r\n        for (let i in this.state.data) {\r\n            if (this.state.data[i].name == data.name) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var temp = this.state.data;\r\n        temp.push(data);\r\n        \r\n        this.setState({\r\n            data: temp\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    removeAll() {\r\n        // Remove all car listings\r\n        this.setState({ data: [] });\r\n    }\r\n\r\n    removeCar(name: string) {\r\n        // Remove car listings by name\r\n        var temp = [];\r\n        \r\n        for (var j in this.state.data) {\r\n            if (name != this.state.data[j].name) {\r\n                temp.push(this.state.data[j]);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    setActive(name: string) {\r\n        this.setState({\r\n            activeTab: name\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const tabItems: Array<string> = [\r\n            \"Chart\", \"Table\"\r\n        ];\r\n\r\n        let body;\r\n        \r\n        if (this.state.activeTab == \"Chart\") {\r\n            body = <div>\r\n                <Graph\r\n                    annualMileage={this.state.annualMileage}\r\n                    months={this.state.months}\r\n                    data={this.state.data}\r\n                    ppg={this.state.ppg}\r\n                />\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    alignContent: 'space-around',\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <div style={{ width: '72.5%' }}>\r\n                        <MileageChanger mileage={this.state.annualMileage} updateMileage={this.updateMileage} />\r\n                    </div>\r\n                    <div style={{width: '22.5%'}}>\r\n                        <MonthChanger months={this.state.months} updateMonths={this.updateMonths} />\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        } else {\r\n            body = <Table\r\n                annualMileage={this.state.annualMileage}\r\n                months={this.state.months}\r\n                data={this.state.data}\r\n                ppg={this.state.ppg}\r\n            />;\r\n        }\r\n\r\n        return <div className=\"container-fluid\">\r\n            <h1>Automobile Cost Calculator</h1>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"card\" id=\"graph-panel\">\r\n                        <div className=\"card-header\">\r\n                            <Tabs items={tabItems}\r\n                                activeItem={this.state.activeTab}\r\n                                setActive={this.setActive}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {body}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <GasPriceChanger ppg={this.state.ppg} updateGasPrice={this.updateGasPrice} />\r\n                    <CarList data={this.state.data}\r\n                        addCar={this.addCar}\r\n                        removeAll={this.removeAll}\r\n                        removeCar={this.removeCar} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","export function range(lo: number, hi: number): Array<number> {\r\n    let ret: number[] = [];\r\n\r\n    for (let i: number = lo; i < hi; i++) {\r\n        ret.push(i);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function money(dollars: number): string {\r\n    // Given a number, format it with a dollar symbol\r\n    return '$' + dollars.toFixed(2);\r\n}","import * as React from \"react\";\r\nimport { Modal } from \"./Modal\";\r\n\r\ninterface InfoBoxProps {\r\n    children?: any;\r\n    title: string;\r\n}\r\n\r\ninterface InfoBoxState {\r\n    modalVisible: boolean;\r\n}\r\n\r\nexport class InfoBox extends React.Component<InfoBoxProps, InfoBoxState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalVisible: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ display: 'inline', float: 'right' }}>\r\n            <Modal\r\n                title={this.props.title}\r\n                triggerText=\"?\"\r\n                visible={this.state.modalVisible}>\r\n                {this.props.children}\r\n            </Modal>\r\n        </div>;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface MonthChangerProps {\r\n    months: number;\r\n    updateMonths: any;\r\n}\r\n\r\nexport class MonthChanger extends React.Component<MonthChangerProps, { months: number }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            months: this.props.months\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const _months = event.target.value;\r\n\r\n        this.setState({\r\n            months: _months\r\n        });\r\n\r\n        this.props.updateMonths(_months);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Months\" id=\"months\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                type=\"number\"\r\n                value={this.state.months}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"months\" className=\"col-sm col-form-label\">\r\n                <b>Months to Show</b>\r\n            </label>\r\n        </form>\r\n    }\r\n}\r\n\r\nclass MileageChangerProps {\r\n    mileage: number;\r\n    updateMileage: any;\r\n}\r\n\r\nexport class MileageChanger extends React.Component<\r\n    MileageChangerProps, { mileage: number }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mileage: 12000\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const _mileage = event.target.value;\r\n\r\n        this.setState({\r\n            mileage: _mileage\r\n        });\r\n\r\n        this.props.updateMileage(_mileage);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Mileage\" id=\"mileage\"\r\n                min=\"0\"\r\n                max=\"100000\"\r\n                type=\"range\"\r\n                value={this.state.mileage}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"mileage\" className=\"col-sm col-form-label\">\r\n                <b>Miles Per: </b>\r\n                Year: {this.state.mileage} &nbsp;\r\n                Month: {Math.round(this.state.mileage / 12)} &nbsp;\r\n                Day: {Math.round(this.state.mileage / 365)} \r\n            </label>\r\n        </form>\r\n    }\r\n}","// Tab controller and navigation\r\n\r\nimport * as React from \"react\";\r\n\r\ninterface TabItemProps {\r\n    name: string;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class TabItem extends React.Component<TabItemProps> {\r\n    render() {\r\n        let className: string = \"nav-link\";\r\n        if (this.props.activeItem == this.props.name) {\r\n            className = \"nav-link active\";\r\n        }\r\n\r\n        return <li className=\"nav-item\">\r\n            <a\r\n                className={className}\r\n                onClick={this.props.setActive}\r\n                data-name={this.props.name}\r\n            >{this.props.name}</a>\r\n        </li>;\r\n    }\r\n}\r\n\r\ninterface TabProps {\r\n    items: Array<string>;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class Tabs extends React.Component<TabProps, { activeItem: string }> {\r\n    constructor(props: TabProps) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: this.props.activeItem\r\n        };\r\n\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    setActive(event) {\r\n        const newTab: string = event.target.dataset.name;\r\n\r\n        // pass name of new active tab back up\r\n        this.props.setActive(newTab);\r\n    }\r\n\r\n    render() {\r\n        return <ul className=\"nav nav-tabs card-header-tabs\">\r\n            {\r\n                this.props.items.map((i) => <TabItem\r\n                    name={i}\r\n                    activeItem={this.props.activeItem}\r\n                    setActive={this.setActive}\r\n                />)\r\n            }\r\n        </ul>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { FuelPrice } from \"./Fuel\";\r\nimport { Car } from \"./Car\";\r\nimport { money } from \"./helpers\";\r\n\r\ninterface TableProps {\r\n    months: number;\r\n    annualMileage: number;\r\n    ppg: FuelPrice;\r\n    data: Array<Car>;\r\n}\r\n\r\nexport class Table extends React.Component<TableProps> {\r\n    render() {\r\n        const ppg = this.props.ppg;\r\n\r\n        return <table>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th colSpan={4}>Cost to Drive (Gas Only)</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>10 Miles</th>\r\n                    <th>25 Miles</th>\r\n                    <th>100 Miles</th>\r\n                    <th>One Month</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.props.data.map((i) =>\r\n                <tr>\r\n                    <td>{i.name}</td>\r\n                    <td>{money(i.costToDriveGasOnly(10, ppg))}</td>\r\n                    <td>{money(i.costToDriveGasOnly(25, ppg))}</td>\r\n                    <td>{money(i.costToDriveGasOnly(100, ppg))}</td>\r\n                    <td>{money(i.costToDriveGasOnly(this.props.annualMileage / 12, ppg))}</td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { fuelString, FuelType, FuelPrice } from \"./Fuel\"\r\nimport { Modal } from \"./Modal\";\r\n\r\nclass CarData {\r\n    name: string;\r\n    price: number;\r\n    mpg: number;\r\n    insurance: number;    // per month\r\n    registration: number; // per ?\r\n    fuelType: FuelType;\r\n}\r\n\r\nexport class Car extends CarData {\r\n    constructor(data: CarData) {\r\n        super();\r\n        this.name = data.name;\r\n        this.price = data.price;\r\n        this.mpg = data.mpg;\r\n        this.insurance = data.insurance;\r\n        this.registration = data.registration;\r\n        this.fuelType = data.fuelType;\r\n    }\r\n\r\n    costToDriveMonth(monthlyMileage: number, months: number, ppg: FuelPrice): number {\r\n        // Calculate the total cost to drive a car x months\r\n        const miles = months * monthlyMileage;\r\n        return this.price +\r\n            (this.insurance * months) +\r\n            this.costToDriveGasOnly(miles, ppg);\r\n    }\r\n\r\n    costToDriveGasOnly(miles: number, ppg: FuelPrice): number {\r\n        // Calculate the cost to drive a car (gas only)\r\n        return (miles / this.mpg) * ppg.get(this.fuelType);\r\n    }\r\n}\r\n\r\ninterface CarListingProps {\r\n    data: Car;\r\n    removeCar: any; // Fix later\r\n    hoverOver: any;\r\n    hoverOut: any;\r\n}\r\n\r\nfunction CarListing(props: CarListingProps) {\r\n    return (\r\n        <li className=\"list-group-item\"\r\n            onMouseEnter={props.hoverOver}\r\n            onMouseOut={props.hoverOut}\r\n        >\r\n            {props.data.name}\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm\"\r\n                style={{\r\n                    float: 'right'\r\n                }}\r\n                onClick={props.removeCar}>x</button>\r\n        </li>\r\n    );\r\n}\r\n\r\ninterface CarListProps {\r\n    data: Array<Car>;\r\n    addCar: any; // fix later\r\n    removeAll: any;\r\n    removeCar: any;\r\n};\r\n\r\nexport class CarList extends React.Component<CarListProps, {\r\n    activeCar: Car\r\n}> {\r\n    constructor(props: CarListProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeCar: null\r\n        };\r\n\r\n        this.hoverOver = this.hoverOver.bind(this);\r\n        this.hoverOut = this.hoverOut.bind(this);\r\n    }\r\n\r\n    hoverOver(car, event) {\r\n        this.setState({\r\n            activeCar: car\r\n        });\r\n    }\r\n\r\n    hoverOut(event) {\r\n        this.setState({\r\n            activeCar: null\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        var carInfo =\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    MPG:\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    Fuel Type:\r\n                </div><div className=\"col-sm\">\r\n                    Price:\r\n            </div>\r\n        </div>;\r\n\r\n        if (this.state.activeCar) {\r\n            carInfo = <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    MPG: {this.state.activeCar.mpg}\r\n                    </div>\r\n                <div className=\"col-sm\">\r\n                    Fuel Type: {fuelString(this.state.activeCar.fuelType)}\r\n                    </div><div className=\"col-sm\">\r\n                    Price: ${this.state.activeCar.price}\r\n                    </div>\r\n            </div>;\r\n        }\r\n\r\n        return <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Vehicles\r\n                <div style={{float: 'right'}}>\r\n                    <Modal\r\n                        title=\"Add Vehicle\"\r\n                        triggerText=\"+\"\r\n                        submit={{\r\n                            buttonName: \"Add\",\r\n                            formName: \"addCar\"\r\n                        }}\r\n                        visible={false}>\r\n                        <CarAdder addCar={this.props.addCar} />\r\n                    </Modal>\r\n                    <button\r\n                        className=\"btn btn-primary btn-danger\"\r\n                        onClick={this.props.removeAll}>\r\n                        x\r\n                    </button>\r\n                    </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {carInfo}\r\n\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {this.props.data.map((i) => <CarListing\r\n                        data={i}\r\n                        hoverOver={this.hoverOver.bind(this, i)}\r\n                        hoverOut={this.hoverOut}\r\n                        removeCar={this.props.removeCar.bind(this, i.name)} />)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface CarAdderProps {\r\n    addCar: any; // fix later\r\n}\r\n\r\ninterface CarAdderState {\r\n    car: Car;\r\n    error: boolean;\r\n}\r\n\r\nclass CarAdder extends React.Component<CarAdderProps, CarAdderState> {\r\n    // Form used for adding new cars\r\n\r\n    constructor(props: CarAdderProps) {\r\n        super(props);\r\n\r\n        // Default values for new cars\r\n        this.state = {\r\n            'car': new Car({\r\n                'name': null,\r\n                'mpg': null,\r\n                'price': 0,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            error: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n    }\r\n\r\n    addCar(state) {\r\n        // Add new car\r\n        if (!this.props.addCar(state)) {\r\n            // Display error message if car with the same name already exists\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Update state to reflect input values\r\n        let temp: Car = this.state.car;\r\n        let new_value: any = event.target.value;\r\n\r\n        // TODO: Might want to revise second condition\r\n        if (event.target.type == \"number\" || !isNaN(event.target.value)) {\r\n            new_value = parseFloat(new_value);\r\n        }\r\n\r\n        temp[event.target.id] = new_value;\r\n        this.setState({ car: temp });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.addCar(this.state.car);\r\n        event.preventDefault(); // Stop reloading page\r\n    }\r\n\r\n    fuelOption(type: FuelType) {\r\n        return <option value={type}>{fuelString(type)}</option>;\r\n    }\r\n\r\n    render() {\r\n        var errorMessage;\r\n\r\n        if (this.state.error) {\r\n             errorMessage = <p>Car with the same name already exists.</p>;\r\n        }\r\n\r\n        return <form onSubmit={this.handleSubmit} id=\"addCar\">\r\n            {errorMessage}\r\n\r\n            <div className=\"form-group\">\r\n                <label>Name\r\n                    <input className=\"form-control\" name=\"Name\" id=\"name\" onChange={this.handleChange} required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>Fuel Type\r\n                        <select className=\"form-control\" name=\"Fuel Type\" id=\"fuelType\" onChange={this.handleChange}>\r\n                            {this.fuelOption(FuelType.regular)}\r\n                            {this.fuelOption(FuelType.mid)}\r\n                            {this.fuelOption(FuelType.premium)}\r\n                            {this.fuelOption(FuelType.diesel)}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>MPG\r\n                    <input className=\"form-control\" type=\"number\" min=\"0\" name=\"MPG\" id=\"mpg\" onChange={this.handleChange} required />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price\r\n                    <input className=\"form-control\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={this.state.car.price}\r\n                        name=\"Price\"\r\n                        id=\"price\"\r\n                        onChange={this.handleChange}\r\n                        required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Insurance (Monthly)\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.insurance}\r\n                            name=\"Insurance\"\r\n                            id=\"insurance\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Vehicle Registration\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.registration}\r\n                            name=\"Registration\"\r\n                            id=\"registration\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}"],"sourceRoot":""}