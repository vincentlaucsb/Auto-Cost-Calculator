{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Car/Car.tsx","webpack:///./src/components/Modal.tsx","webpack:///./src/components/Buttons.tsx","webpack:///./src/components/Globals.tsx","webpack:///./src/components/CarDatabase.tsx","webpack:///./src/components/MinimizableCard.tsx","webpack:///./src/components/helpers.tsx","webpack:///./src/components/DeleteConfirm.tsx","webpack:///./src/index.tsx","webpack:///./src/components/AutoCostCalculator.tsx","webpack:///./src/components/Tabs.tsx","webpack:///./src/components/Car/Table.tsx","webpack:///./src/components/Car/List.tsx","webpack:///./src/components/Fuel.tsx","webpack:///./src/components/Car/Adder.tsx","webpack:///./src/components/Car/CarListing.tsx","webpack:///./src/components/Car/CarFields.tsx","webpack:///./src/components/FileLoader.tsx","webpack:///./src/components/charts/Graph.tsx","webpack:///./src/components/charts/MileageChanger.tsx","webpack:///./src/components/charts/MonthChanger.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ServiceFrequency","price","mpg","insurance","registration","fuelType","FuelType","regular","this","parseFloat","parseInt","monthlyMileage","months","ppg","miles","fuelCost","container","React","Component","props","super","state","setState","currentModal","className","tabIndex","role","style","display","background","visible","toggle","clearModal","renderModal","submit","PrimaryButton","type","form","formName","buttonName","title","onClick","children","Button","buttonProps","triggerText","classNames","join","disabled","cars","Car","carDb","CarDatabase","addCar","defaultPpg","FuelPrice","set","mid","premium","diesel","Map","nextId","tempCar","load","ret","car","values","dump","Array","from","record","id","delete","clear","minimize","minimized","Fragment","float","titleCorner","overflowX","overflowY","height","lo","hi","dollars","toFixed","mapData","k","v","confirm","text","deleteButton","src","alt","DangerButton","defaults","Globals","Defaults","savedData","localStorage","getItem","JSON","parse","removeAll","ReactDOM","render","AutoCostCalculator","document","getElementById","ResponsiveReactGridLayout","WidthProvider","Responsive","temp_modals_visible","annualMileage","activeTab","modalsVisible","dynamicComponents","updateCar","updateGasPrice","updateMileage","updateMonths","removeCar","reset","setActive","save","loadFile","saveFile","_ppg","mileage","_months","jsonData","setItem","stringify","console","log","blob","Blob","saveAs","toArray","costs","x","y","costToDriveMonth","body","Graph","lazy","MileageChanger","MonthChanger","width","flexDirection","Suspense","fallback","makeGraphData","alignContent","Table","ModalContainer","Modal","FileLoader","layouts","lg","w","h","breakpoints","md","sm","xs","xxs","cols","rowHeight","draggableHandle","Tabs","items","activeItem","GasPriceChanger","CarList","TabItem","event","newTab","target","dataset","map","colSpan","money","DeleteConfirm","controls","Adder","MinimizableCard","CarListing","fuelString","Number","jsonifyMap","GasPriceChangerColumn","minWidth","step","min","toString","onChange","fuelPrice","htmlFor","handleSubmit","updateable","temp_ppg","temp","targetKey","newPpg","preventDefault","updateButton","DisabledButton","infoBox","onSubmit","error","handleChange","new_value","isNaN","errorMessage","required","fuelOption","formatMoney","Intl","NumberFormat","currency","format","carData","isEditable","updateMpg","updatePrice","updateRegistration","updateInsurance","updateFuel","makeEditable","newCarData","gasFieldOptions","editButton","alignItems","paddingLeft","NumberField","label","fieldName","formatter","GasField","options","displayText","defaultValue","filename","readFile","fileInput","createRef","file","reader","FileReader","onload","fileLoadedEvent","readAsText","userFile","current","files","ref","series","entries","keys","FlexibleXYPlot","margin","left","right","top","bottom","HorizontalGridLines","kv","LineSeries","XAxis","YAxis","DiscreteColorLegend","_mileage","max","Math","round"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([39,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as React from \"react\";\r\nimport { Button, DangerButton } from \"../Buttons\";\r\nimport { fuelString, FuelType, FuelPrice } from \"../Fuel\";\r\nimport { MinimizableCard } from \"../MinimizableCard\";\r\nimport { DeleteConfirm } from \"../DeleteConfirm\";\r\nimport { IJsonSerializable } from \"../IJSONSerializable\";\r\n\r\nclass CarData {\r\n    name: string;\r\n    price: number;\r\n    mpg: number;\r\n    insurance: number;    // per month\r\n    registration: number; // per ?\r\n    fuelType: FuelType;\r\n}\r\n\r\nenum ServiceFrequency {\r\n    Month,\r\n    Miles\r\n}\r\n\r\n// Represents a reoccurring car service item, e.g.\r\n// an oil change or tire replacements\r\nclass ServiceItem {\r\n    name: string;\r\n    frequency: number;\r\n    frequencyType: ServiceFrequency;\r\n}\r\n\r\nexport class Car implements IJsonSerializable {\r\n    load(data: object) {\r\n        this.name = data['name'];\r\n        this.price = data['price'];\r\n        this.mpg = data['mpg'];\r\n        this.insurance = data['insurance'];\r\n        this.registration = data['registration'];\r\n        this.fuelType = data['fuelType'];\r\n    }\r\n\r\n    dump(): object {\r\n        return this.data;\r\n    }\r\n\r\n    id: number;\r\n    data: CarData;\r\n\r\n    constructor(data: CarData = {\r\n        name: \"\",\r\n        price: 0,\r\n        mpg: 0,\r\n        insurance: 0,\r\n        registration: 0,\r\n        fuelType: FuelType.regular\r\n    }) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() { return this.data.name; }\r\n    get price() { return this.data.price; }\r\n    get mpg() { return this.data.mpg; }\r\n    get insurance() { return this.data.insurance; }\r\n    get registration() { return this.data.registration; }\r\n    get fuelType() { return this.data.fuelType; }\r\n\r\n    set name(value: any) {\r\n        this.data.name = value;\r\n    }\r\n\r\n    // Make sure values are numeric types and not strings\r\n    set price(value: any) {\r\n        this.data.price = parseFloat(value);\r\n    }\r\n\r\n    set mpg(value: any) {\r\n        this.data.mpg = parseFloat(value);\r\n    }\r\n\r\n    set fuelType(value: any) {\r\n        this.data.fuelType = parseInt(value);\r\n    }\r\n\r\n    set insurance(value: any) {\r\n        this.data.insurance = parseFloat(value);\r\n    }\r\n\r\n    set registration(value: any) {\r\n        this.data.registration = parseFloat(value);\r\n    }\r\n\r\n    // Calculate the total cost to drive a car x months\r\n    costToDriveMonth(monthlyMileage: number, months: number, ppg: FuelPrice): number {\r\n        const miles = months * monthlyMileage;\r\n        let ret = this.price +\r\n            (this.insurance * months) +\r\n\r\n            // Divide annual registration cost by month\r\n            ((this.registration / 12) * months) +\r\n\r\n            this.fuelCost(miles, ppg);\r\n        return ret;\r\n    }\r\n\r\n    fuelCost(miles: number, ppg: FuelPrice): number {\r\n        // Calculate the cost to drive a car (gas only)\r\n        return (miles / this.mpg) * ppg.get(this.fuelType);\r\n    }\r\n}","/** React-Bootstrap Modal System\r\n * \r\n *  Creates a single modal container which handles all requests to display modals.\r\n *  This allows modals to be displayed without interference from other elements.\r\n *  \r\n */\r\n\r\nimport * as React from \"react\";\r\nimport { Button, PrimaryButton } from \"./Buttons\";\r\n\r\nlet container = null; // Keep track of ModalContainer\r\n\r\nexport class ModalContainer extends React.Component<{}, {currentModal: JSX.Element}> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'currentModal': null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Keep track of <ModalContainer />\r\n        container = this;\r\n    }\r\n\r\n    clearModal() {\r\n        this.setState({ 'currentModal': null });\r\n    }\r\n\r\n    render() {\r\n        const currentModal = this.state['currentModal'];\r\n\r\n        return <div className=\"modal\" tabIndex={-1} role=\"dialog\"\r\n            style={{\r\n                display: currentModal ? 'block' : 'none',\r\n                background: 'rgba(0, 0, 0, 0.5)'\r\n            }}>\r\n            {this.state.currentModal}\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface ModalProps {\r\n    submit?: {\r\n        buttonName: string;\r\n        formName: string;\r\n    };\r\n    children?: any;\r\n    title: string;\r\n    triggerText?: string;\r\n    visible?: boolean;\r\n    hideTrigger?: boolean;\r\n    buttonProps?: any;\r\n}\r\n\r\ninterface ModalState {\r\n    visible: boolean;\r\n}\r\n\r\nexport class Modal extends React.Component<ModalProps, ModalState> {\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'visible': ('visible' in this.props) ? this.props.visible : false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        if (!this.state.visible) {\r\n            // If not visisble, then change that\r\n            this.renderModal();\r\n        } else {\r\n            container.clearModal();\r\n        }\r\n\r\n        this.setState({\r\n            'visible': !this.state['visible']\r\n        });\r\n    }\r\n\r\n    renderModal() {\r\n        let submit = this.props.submit ? <PrimaryButton\r\n                type=\"submit\"\r\n                form={this.props.submit.formName}>\r\n                {this.props.submit.buttonName}\r\n            </PrimaryButton> : null;\r\n\r\n        container.setState({\r\n            currentModal:\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{this.props.title}</h5>\r\n\r\n                            <button type=\"button\" className=\"close\"\r\n                                onClick={this.toggle}\r\n                                data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {this.props.children}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            {submit}\r\n                            <Button className=\"btn-secondary\" onClick={this.toggle}\r\n                                data-dismiss=\"modal\">Close</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <PrimaryButton onClick={this.toggle} {...this.props.buttonProps}>\r\n            {this.props.triggerText}\r\n        </PrimaryButton>;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nexport function Button({ className=\"\", ...props }) {\r\n    let classNames = [\"btn\", className].join(\" \");\r\n    return <button type=\"button\" className={classNames} {...props} />\r\n}\r\n\r\nexport function PrimaryButton({ className = \"\", ...props }) {\r\n    let classNames = [\"btn-primary\", className].join(\" \");\r\n    return <Button className={classNames} {...props} />\r\n}\r\n\r\nexport function DisabledButton({ className = \"\", ...props }) {\r\n    let classNames = [\"btn-primary btn-disabled\", className].join(\" \");\r\n    return <Button className={classNames} {...props} disabled />\r\n}\r\n\r\nexport function DangerButton({ className=\"\", ...props }) {\r\n    let classNames = [\"btn-danger\", className].join(\" \");\r\n    return <Button className={classNames} {...props} />\r\n}","// Default values for the Car Cost Calculator\r\n\r\nimport { CarDatabase } from \"./CarDatabase\";\r\nimport { FuelType, FuelPrice } from \"./Fuel\";\r\nimport { Car } from \"./Car/Car\";\r\n\r\nexport class Defaults {\r\n    cars(): CarDatabase {\r\n        let cars: Array<Car> = [\r\n            new Car({\r\n                'name': '2018 Ford F-150',\r\n                'mpg': 23,\r\n                'price': 27705,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Chevrolet Silverado 1500',\r\n                'mpg': 21,\r\n                'price': 28300,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Ram 1500',\r\n                'mpg': 23,\r\n                'price': 27295,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Toyota RAV4',\r\n                'mpg': 26,\r\n                'price': 24660,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Nissan Rogue',\r\n                'mpg': 29,\r\n                'price': 24800,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Toyota Camry',\r\n                'mpg': 34,\r\n                'price': 23645,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n        ];\r\n\r\n        let carDb = new CarDatabase();\r\n        for (var i in cars) {\r\n            carDb.addCar(cars[i]);\r\n        }\r\n\r\n        return carDb;\r\n    }\r\n\r\n   ppg() : FuelPrice {\r\n        var defaultPpg = new FuelPrice();\r\n        defaultPpg.set(FuelType.regular, 2.87);\r\n        defaultPpg.set(FuelType.mid, 3.15);\r\n        defaultPpg.set(FuelType.premium, 3.4);\r\n        defaultPpg.set(FuelType.diesel, 3.18);\r\n        return defaultPpg;\r\n    }\r\n}","import { Car } from \"./Car/Car\";\r\nimport { IJsonSerializable } from \"./IJsonSerializable\";\r\nimport { jsonifyMap } from \"./helpers\";\r\n\r\n// Stores information of all cars in the app\r\nexport class CarDatabase implements IJsonSerializable {\r\n    load(data: object) {\r\n        // data is assumed to be a JSON array\r\n        for (let i in data) {\r\n            let tempCar = new Car();\r\n            tempCar.load(data[i]);\r\n            this.addCar(tempCar);\r\n        }\r\n    }\r\n\r\n    dump(): object {\r\n        let ret = [];\r\n        for (let car of this.data.values()) {\r\n            ret.push(car.dump());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    data: Map<number, Car>;\r\n\r\n    // The ID assigned to the next listing\r\n    nextId: number;\r\n\r\n    constructor() {\r\n        this.data = new Map<number, Car>();\r\n        this.nextId = 0;\r\n    }\r\n\r\n    // Return an array of cars\r\n    toArray() {\r\n        return Array.from(this.data.values());\r\n    }\r\n\r\n    // Add a car listing\r\n    addCar(record: Car) {\r\n        record.id = this.nextId;\r\n        this.data.set(this.nextId, record);\r\n        this.nextId++;\r\n    }\r\n\r\n    // Update a car listing\r\n    updateCar(id: number, data: Car) {\r\n        this.data.set(id, data);\r\n    }\r\n\r\n    // Remove a car by ID\r\n    removeCar(id: number) {\r\n        return this.data.delete(id);\r\n    }\r\n\r\n    // Remove all car listings\r\n    removeAll() {\r\n        this.data.clear();\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface MinimizeTriggerProps {\r\n    onClick: any;\r\n    minimized: boolean;\r\n}\r\n\r\nclass MinimizeTrigger extends React.Component<MinimizeTriggerProps> {\r\n    render() {\r\n        var text = '[-]';\r\n        if (this.props.minimized) {\r\n            text = '[+]';\r\n        }\r\n\r\n        return <a\r\n            role='button'\r\n            onClick={this.props.onClick}\r\n            style={{float: 'left'}}>\r\n            {text}\r\n        </a>;\r\n        \r\n    }\r\n}\r\n\r\ninterface MinimizableCardProps {\r\n    title: string;\r\n    titleCorner?: JSX.Element;\r\n    children: JSX.Element;\r\n}\r\n\r\nexport class MinimizableCard extends React.Component<MinimizableCardProps, {\r\n    minimized: boolean\r\n}> {\r\n    // A card that can be minimized\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.minimize = this.minimize.bind(this);\r\n\r\n        this.state = {\r\n            'minimized': false\r\n        };\r\n    }\r\n\r\n    minimize() {\r\n        this.setState({\r\n            'minimized': !this.state['minimized']\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const minimized = this.state['minimized'];\r\n\r\n        var title: any = this.props.title;\r\n        if ('titleCorner' in this.props) {\r\n            title = <React.Fragment>\r\n                {this.props.title}\r\n\r\n                <div style={{ float: \"right\" }}>\r\n                    {this.props.titleCorner}\r\n                </div>\r\n            </React.Fragment>;\r\n        }\r\n\r\n        var children = <div className=\"card-body\" style={{\r\n            overflowX: \"hidden\",\r\n            overflowY: \"hidden\"\r\n        }}>\r\n            {this.props.children}\r\n        </div>;\r\n\r\n        if (minimized) {\r\n            children = null;\r\n        }\r\n\r\n        // Stretch to fit flexible box height wise\r\n        // <MinimizeTrigger onClick={this.minimize} minimized={minimized} />\r\n        return <div className=\"card\" style={{ height: \"100%\" }}>\r\n            <div className=\"card-header\">\r\n                {title}\r\n            </div>\r\n            {children}\r\n        </div>\r\n    }\r\n}","export function range(lo: number, hi: number): Array<number> {\r\n    let ret: number[] = [];\r\n\r\n    for (let i: number = lo; i < hi; i++) {\r\n        ret.push(i);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function money(dollars: number): string {\r\n    // Given a number, format it with a dollar symbol\r\n    return '$' + dollars.toFixed(2);\r\n}\r\n\r\n// Return a JSON representation of a JavaScript map\r\nexport function jsonifyMap(data: Map<any, any>): object {\r\n    let mapData = {};\r\n\r\n    for (var [k, v] of data) {\r\n        mapData[k] = v;\r\n    }\r\n\r\n    return mapData;\r\n}","import * as React from \"react\";\r\nimport { DangerButton, PrimaryButton } from \"./Buttons\";\r\n\r\ninterface DeleteConfirmProps {\r\n    text?: string;\r\n    className?: string;\r\n    delete: (param?: any) => void;\r\n}\r\n\r\nexport class DeleteConfirm extends React.Component<DeleteConfirmProps, { confirm: boolean }> {\r\n    /*\r\n     * Delete button which changes to a confirm prompt before\r\n     * finally doing the deed\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            confirm: false\r\n        };\r\n\r\n        this.delete = this.delete.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    delete() {\r\n        this.props.delete();\r\n        this.setState({ confirm: false });\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ confirm: !this.state.confirm });\r\n    }\r\n\r\n    render() {\r\n        const text = ('text' in this.props) ? this.props.text : 'x';\r\n        let deleteButton = <img src=\"./img/delete-24px.svg\" onClick={this.toggle} alt=\"Delete\" />;\r\n\r\n        if ('text' in this.props) {\r\n            deleteButton = <DangerButton className={this.props.className} onClick={this.toggle}>{text}</DangerButton>;\r\n        }\r\n\r\n        return this.state.confirm ?\r\n            <React.Fragment>\r\n                <DangerButton className={this.props.className}\r\n                    onClick={this.delete}>Confirm</DangerButton>\r\n                <PrimaryButton className={this.props.className} onClick={this.toggle}>Cancel</PrimaryButton>\r\n            </React.Fragment> :\r\n            deleteButton;\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport * as Globals from \"./components/Globals\"\r\nimport { AutoCostCalculator } from \"./components/AutoCostCalculator\"\r\n\r\nlet defaults = (new Globals.Defaults());\r\n\r\nlet savedData = localStorage.getItem('autoCostData');\r\nlet carDb = defaults.cars();\r\nlet ppg = defaults.ppg();\r\n\r\nif (savedData != null) {\r\n    savedData = JSON.parse(savedData);\r\n    carDb.removeAll();\r\n    carDb.load(savedData['data']);\r\n    ppg.load(savedData['ppg']);\r\n}\r\n\r\nReactDOM.render(\r\n    <AutoCostCalculator data={carDb} ppg={ppg} />,\r\n    document.getElementById('root')\r\n);","import * as React from \"react\";\r\nimport { saveAs } from 'file-saver';\r\nimport { ModalContainer, Modal } from \"./Modal\";\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\n\r\nimport { FuelType, FuelPrice, GasPriceChanger } from \"./Fuel\";\r\nimport { Tabs } from \"./Tabs\";\r\n\r\nimport { Table } from \"./Car/Table\";\r\nimport { CarDatabase } from \"./CarDatabase\";\r\nimport { Car } from \"./Car/Car\";\r\nimport { CarList as CarList } from \"./Car/List\";\r\nimport { Defaults } from \"./Globals\";\r\nimport { FileLoader } from \"./FileLoader\";\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\ninterface AutoCostCalcProps {\r\n    data: CarDatabase;\r\n    ppg: FuelPrice;\r\n};\r\n\r\ninterface AutoCostCalcState extends AutoCostCalcProps{\r\n    months: number;\r\n    annualMileage: number;\r\n    activeTab: string;\r\n    modalsVisible: Map<string, boolean>;\r\n};\r\n\r\nexport class AutoCostCalculator extends React.Component<AutoCostCalcProps, AutoCostCalcState> {\r\n    dynamicComponents: object;\r\n    modalRef: any;\r\n\r\n    constructor(props: AutoCostCalcProps) {\r\n        super(props);\r\n\r\n        let temp_modals_visible: Map<string, boolean> = new Map([\r\n            ['carAdder', false]\r\n        ]);\r\n        \r\n        this.state = {\r\n            data: props.data,\r\n            ppg: props.ppg,\r\n            months: 48,\r\n            annualMileage: 12000,\r\n            activeTab: \"Chart\",\r\n            modalsVisible: temp_modals_visible\r\n        };\r\n\r\n        this.dynamicComponents = {};\r\n\r\n        this.updateCar = this.updateCar.bind(this);\r\n        this.updateGasPrice = this.updateGasPrice.bind(this);\r\n        this.updateMileage = this.updateMileage.bind(this);\r\n        this.updateMonths = this.updateMonths.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n        this.removeAll = this.removeAll.bind(this);\r\n        this.removeCar = this.removeCar.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.loadFile = this.loadFile.bind(this);\r\n        this.saveFile = this.saveFile.bind(this);\r\n    }\r\n    \r\n    updateGasPrice(_ppg: FuelPrice) {\r\n        this.setState({\r\n            ppg: _ppg\r\n        });\r\n    }\r\n\r\n    updateMileage(mileage: number) {\r\n        this.setState({\r\n            annualMileage: mileage\r\n        });\r\n    }\r\n\r\n    updateMonths(_months: number) {\r\n        this.setState({\r\n            months: _months\r\n        });\r\n    }\r\n\r\n    // Add car listing\r\n    addCar(data: Car) {\r\n        this.state.data.addCar(data);\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Update an individual cars\r\n    updateCar(id: number, data: Car) {\r\n        this.state.data.updateCar(id, data);\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Remove all car listings\r\n    removeAll() {\r\n        this.state.data.removeAll();\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Remove an individual car\r\n    removeCar(id: number) {\r\n        this.state.data.removeCar(id);\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    setActive(name: string) {\r\n        this.setState({\r\n            activeTab: name\r\n        });\r\n    }\r\n\r\n    // Reset the current calculator state\r\n    reset() {\r\n        let defaults = new Defaults();\r\n\r\n        this.setState({\r\n            data: defaults.cars(),\r\n            ppg: defaults.ppg()\r\n        });\r\n\r\n        this.save();\r\n    }\r\n\r\n    // Save the auto cost calculator's state to local storage\r\n    save() {\r\n        let jsonData = { };\r\n        jsonData['ppg'] = this.state.ppg.dump();\r\n        jsonData['data'] = this.state.data.dump();\r\n\r\n        // console.log(jsonData);\r\n        // console.log(JSON.stringify(jsonData));\r\n        localStorage.setItem('autoCostData', JSON.stringify(jsonData));\r\n    }\r\n\r\n    loadFile(data: object) {\r\n        // console.log(\"GOT DATA\", data);\r\n        let ppg = new FuelPrice();\r\n        ppg.load(data['ppg']);\r\n\r\n        let cars = new CarDatabase();\r\n        cars.load(data['data']);\r\n\r\n        console.log(\"PPG\", ppg);\r\n        console.log(\"CARS\", cars);\r\n\r\n        this.setState({\r\n            ppg: ppg,\r\n            data: cars\r\n        });\r\n\r\n        console.log(\"STATE UPDATED\");\r\n\r\n        this.save();\r\n    }\r\n\r\n    saveFile() {\r\n        let jsonData = {};\r\n        jsonData['ppg'] = this.state.ppg.dump();\r\n        jsonData['data'] = this.state.data.dump();\r\n\r\n        var blob = new Blob([JSON.stringify(jsonData)],\r\n            {\r\n                type: \"text/plain;charset=utf-8\"\r\n            }\r\n        );\r\n\r\n        saveAs(blob, \"auto-cost-data.json\");\r\n    }\r\n\r\n    makeGraphData(): Map<string, Array<object>> {\r\n        let cars = this.state.data.toArray();\r\n\r\n        // a mapping of car names to arrays of (x, y) pairs\r\n        let data = new Map<string, Array<object>>();\r\n\r\n        for (let i in cars) {\r\n            let car = cars[i];\r\n\r\n            // An array of car costs, site-indexed by month\r\n            let costs = [];\r\n\r\n            for (var j = 0; j < this.state.months; j++) {\r\n                costs.push({\r\n                    x: j,\r\n                    y: car.costToDriveMonth(this.state.annualMileage / 12, j, this.state.ppg)\r\n                });\r\n            }\r\n\r\n            data.set(car.name, costs);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    render() {\r\n        const tabItems: Array<string> = [\r\n            \"Chart\", \"Table\"\r\n        ];\r\n\r\n        let body;\r\n\r\n        if (this.state.activeTab == \"Chart\") {\r\n            const Graph = React.lazy(() => import(\"./charts/Graph\"));\r\n            const MileageChanger = React.lazy(() => import(\"./charts/MileageChanger\"));\r\n            const MonthChanger = React.lazy(() => import(\"./charts/MonthChanger\"));\r\n\r\n            body = <div style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n            }}>\r\n                <React.Suspense fallback={<div>Loading...</div>}>\r\n                <Graph\r\n                    data={this.makeGraphData()}\r\n                />\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    alignContent: 'space-around',\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <div style={{ width: '72.5%' }}>\r\n                        <MileageChanger mileage={this.state.annualMileage} updateMileage={this.updateMileage} />\r\n                    </div>\r\n                    <div style={{width: '22.5%'}}>\r\n                        <MonthChanger months={this.state.months} updateMonths={this.updateMonths} />\r\n                    </div>\r\n                    </div>\r\n                </React.Suspense>\r\n            </div>;\r\n        } else {\r\n            body = <Table\r\n                annualMileage={this.state.annualMileage}\r\n                months={this.state.months}\r\n                data={this.state.data}\r\n                ppg={this.state.ppg}\r\n            />;\r\n        }\r\n\r\n        // Grid\r\n        var layouts = {\r\n            lg: [\r\n                { i: 'a', x: 0, y: 0, w: 20, h: 30 },\r\n                { i: 'gas', x: 20, y: 0, w: 10, h: 16 },\r\n                { i: 'c', x: 20, y: 2, w: 10, h: 40 }\r\n            ]\r\n        };\r\n\r\n        return <React.Fragment>\r\n            <ModalContainer />\r\n            <div className=\"container-fluid\">\r\n                <h1>Automobile Cost Calculator</h1>\r\n\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={this.reset}>\r\n                    Reset</button>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.save}>\r\n                    Save</button>\r\n                <Modal submit={{\r\n                    buttonName: \"Load from File\",\r\n                    formName: \"loadFile\"\r\n                }}\r\n\r\n                    buttonProps={{\r\n                        className: \"btn-primary\"\r\n                    }}\r\n\r\n                    triggerText=\"Load from File\" title=\"Load from File\">\r\n                    <FileLoader loadFile={this.loadFile} />\r\n                </Modal>\r\n                <button className=\"btn btn-primary\"\r\n                    onClick={this.saveFile}\r\n                >Save to File</button>\r\n\r\n                <ResponsiveReactGridLayout className=\"layout\" layouts={layouts}\r\n                    breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n                    cols={{ lg: 30, md: 30, sm: 6, xs: 4, xxs: 2 }}\r\n\r\n                    rowHeight={10}\r\n\r\n                    // Make Bootstrap card headers the handle for drap/drop\r\n                    draggableHandle=\"div.card-header\"\r\n\r\n                    // verticalCompact={false}\r\n                >\r\n                    <div key=\"a\">\r\n                        <div className=\"card\" id=\"graph-panel\" style={{ height: \"100%\" }}>\r\n                            <div className=\"card-header\">\r\n                                <Tabs items={tabItems}\r\n                                    activeItem={this.state.activeTab}\r\n                                    setActive={this.setActive}\r\n                                />\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                {body}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div key=\"gas\">\r\n                        <GasPriceChanger ppg={this.state.ppg} updateGasPrice={this.updateGasPrice} />\r\n                    </div>\r\n                    <div key=\"c\">\r\n                        <CarList data={this.state.data}\r\n                            addCar={this.addCar}\r\n                            updateCar={this.updateCar}\r\n                            removeAll={this.removeAll}\r\n                            removeCar={this.removeCar}\r\n                        />\r\n                    </div>\r\n                </ResponsiveReactGridLayout>\r\n            </div>\r\n            </React.Fragment>\r\n    }\r\n}","// Tab controller and navigation\r\n\r\nimport * as React from \"react\";\r\n\r\ninterface TabItemProps {\r\n    name: string;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class TabItem extends React.Component<TabItemProps> {\r\n    render() {\r\n        let className: string = \"nav-link\";\r\n        if (this.props.activeItem == this.props.name) {\r\n            className = \"nav-link active\";\r\n        }\r\n\r\n        return <li className=\"nav-item\">\r\n            <a\r\n                className={className}\r\n                role=\"button\"\r\n                onClick={this.props.setActive}\r\n                data-name={this.props.name}\r\n            >{this.props.name}</a>\r\n        </li>;\r\n    }\r\n}\r\n\r\ninterface TabProps {\r\n    items: Array<string>;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class Tabs extends React.Component<TabProps, { activeItem: string }> {\r\n    constructor(props: TabProps) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: this.props.activeItem\r\n        };\r\n\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    setActive(event) {\r\n        const newTab: string = event.target.dataset.name;\r\n\r\n        // pass name of new active tab back up\r\n        this.props.setActive(newTab);\r\n    }\r\n\r\n    render() {\r\n        return <ul className=\"nav nav-tabs card-header-tabs\">\r\n            {\r\n                this.props.items.map((i) => <TabItem\r\n                    name={i}\r\n                    activeItem={this.props.activeItem}\r\n                    setActive={this.setActive}\r\n                />)\r\n            }\r\n        </ul>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { FuelPrice } from \"../Fuel\";\r\nimport { money } from \"../helpers\";\r\nimport { Car } from \"./Car\";\r\nimport { CarDatabase } from \"../CarDatabase\";\r\n\r\ninterface TableProps {\r\n    months: number;\r\n    annualMileage: number;\r\n    ppg: FuelPrice;\r\n    data: CarDatabase;\r\n}\r\n\r\nexport class Table extends React.Component<TableProps> {\r\n    render() {\r\n        const ppg = this.props.ppg;\r\n\r\n        return <table>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th colSpan={4}>Cost to Drive (Gas Only)</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>10 Miles</th>\r\n                    <th>25 Miles</th>\r\n                    <th>100 Miles</th>\r\n                    <th>One Month</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.props.data.toArray().map((i) =>\r\n                <tr>\r\n                    <td>{i.name}</td>\r\n                    <td>{money(i.fuelCost(10, ppg))}</td>\r\n                    <td>{money(i.fuelCost(25, ppg))}</td>\r\n                    <td>{money(i.fuelCost(100, ppg))}</td>\r\n                    <td>{money(i.fuelCost(this.props.annualMileage / 12, ppg))}</td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Car } from \"./Car\";\r\nimport { Adder } from \"./Adder\";\r\nimport { CarListing } from \"./CarListing\";\r\nimport { Modal } from \"../Modal\";\r\nimport { MinimizableCard } from \"../MinimizableCard\";\r\nimport { DeleteConfirm } from \"../DeleteConfirm\";\r\nimport { CarDatabase } from \"../CarDatabase\";\r\n\r\ninterface ListProps {\r\n    data: CarDatabase;\r\n    addCar: (data: Car) => void;\r\n    removeAll: () => void;\r\n    updateCar: (id: number, data: Car) => void;\r\n    removeCar: (car: number) => void;\r\n};\r\n\r\n// A list of vehicles\r\nexport class CarList extends React.Component<ListProps> {\r\n    constructor(props: ListProps) {\r\n        super(props);\r\n    }\r\n\r\n    updateCar(id: number, data: Car) {\r\n        this.props.updateCar(id, data);\r\n    }\r\n\r\n    render() {\r\n        const clearAll = <DeleteConfirm text=\"Clear All\" delete={this.props.removeAll} />;\r\n\r\n        // Controls to add a car and remove all cars\r\n        const controls = <React.Fragment>\r\n            <Modal submit={{\r\n                    buttonName: \"Add\",\r\n                    formName: \"addCar\"\r\n                }}\r\n\r\n                buttonProps={{\r\n                    className: \"btn-sm\"\r\n                }}\r\n\r\n                triggerText=\"Add Vehicle\" title=\"Add Vehicle\">\r\n                <Adder addCar={this.props.addCar} />\r\n            </Modal>\r\n            <DeleteConfirm className=\"btn-sm\" text=\"Clear All\" delete={this.props.removeAll} />\r\n        </React.Fragment>;\r\n\r\n        return <MinimizableCard title=\"Vehicles\" titleCorner={controls}>\r\n            <React.Fragment>\r\n                <div style={{\r\n                    overflowX: \"hidden\",\r\n                    overflowY: \"scroll\"\r\n                }}>\r\n                <ul className=\"list-group list-group-flush\" >\r\n                    {this.props.data.toArray().map((i) => <CarListing\r\n                        data={i}\r\n                        updateCar={this.updateCar.bind(this, i.id)}\r\n                        removeCar={this.props.removeCar.bind(this, i.id)} />)}\r\n                    </ul>\r\n                </div>\r\n            </React.Fragment>\r\n        </MinimizableCard>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Modal } from \"./Modal\";\r\nimport { MinimizableCard } from \"./MinimizableCard\";\r\nimport { DisabledButton, PrimaryButton } from \"./Buttons\";\r\nimport { IJsonSerializable } from \"./IJSONSerializable\";\r\nimport { jsonifyMap } from \"./helpers\";\r\n\r\nexport enum FuelType {\r\n    regular,\r\n    mid,\r\n    premium,\r\n    diesel\r\n}\r\n\r\nexport function fuelString(type: FuelType) {\r\n    switch (type) {\r\n        case FuelType.regular:\r\n            return \"Regular (87)\";\r\n        case FuelType.mid:\r\n            return \"Mid-Grade (89)\";\r\n        case FuelType.premium:\r\n            return \"Premium (92)\";\r\n        case FuelType.diesel:\r\n            return \"Diesel\";  \r\n    }\r\n}\r\n\r\nexport class FuelPrice implements IJsonSerializable {\r\n    constructor() {\r\n        this.data = new Map<FuelType, number>();\r\n    }\r\n\r\n    get(key: FuelType): number {\r\n        return this.data.get(key);\r\n    }\r\n\r\n    set(key: FuelType, value: number): this {\r\n        this.data.set(key, value);\r\n        return this;\r\n    }\r\n\r\n    data: Map<FuelType, number>;\r\n\r\n    load(data: object) {\r\n        for (let k in data) {\r\n            this.data.set(Number(k), data[k]);\r\n        }\r\n    }\r\n\r\n    dump(): object {\r\n        return jsonifyMap(this.data);\r\n    }\r\n}\r\n\r\nclass GasPriceChangerColumn extends React.Component<\r\n    {id: FuelType, fuelPrice: string, onChange: any} ,{}\r\n>    {\r\n    render() {\r\n        return <div\r\n            className=\"form-group col-sm\"\r\n            style={{ minWidth: \"10em\" }}\r\n        >\r\n            <input className=\"form-control\"\r\n                name={fuelString(this.props.id)}\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                id={this.props.id.toString()}\r\n                onChange={this.props.onChange}\r\n                value={this.props.fuelPrice}\r\n            />\r\n            <label\r\n                htmlFor={this.props.id.toString()}\r\n                className=\"col-sm col-form-label\">\r\n                {fuelString(this.props.id)}\r\n            </label>\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface GasPriceProps {\r\n    ppg: FuelPrice;\r\n    updateGasPrice: any; // change\r\n}\r\n\r\ninterface GasPriceState {\r\n    updateable: boolean;\r\n    ppg: FuelPrice;\r\n    temp_ppg: Map<FuelType, string>;\r\n}\r\n\r\nexport class GasPriceChanger extends React.Component<\r\n    GasPriceProps, GasPriceState> {\r\n    constructor(props: GasPriceProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            updateable: false,\r\n            ppg: props.ppg,\r\n            temp_ppg: new Map([\r\n                [FuelType.regular, props.ppg.get(0).toString()],\r\n                [FuelType.mid, props.ppg.get(1).toString()],\r\n                [FuelType.premium, props.ppg.get(2).toString()],\r\n                [FuelType.diesel, props.ppg.get(3).toString()]\r\n            ]),\r\n        };\r\n    }\r\n\r\n    onChange(event) {\r\n        var temp = this.state.temp_ppg;\r\n        let targetKey: FuelType = parseInt(event.target.id);\r\n        temp.set(targetKey, event.target.value);\r\n\r\n        this.setState({\r\n            updateable: true,\r\n            temp_ppg: temp\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        /* \"Update\" button pressed */\r\n\r\n        // Pass updated prices back up to MpgCalculator\r\n        let newPpg = new FuelPrice();\r\n        newPpg.set(FuelType.regular, parseFloat(this.state.temp_ppg.get(FuelType.regular)));\r\n        newPpg.set(FuelType.mid, parseFloat(this.state.temp_ppg.get(FuelType.mid)));\r\n        newPpg.set(FuelType.premium, parseFloat(this.state.temp_ppg.get(FuelType.premium)));\r\n        newPpg.set(FuelType.diesel, parseFloat(this.state.temp_ppg.get(FuelType.diesel)));\r\n\r\n        this.props.updateGasPrice(newPpg);\r\n        event.preventDefault(); // Prevent submit from reloading page\r\n\r\n        // Disable update button\r\n        this.setState({\r\n            updateable: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const updateButton = this.state.updateable ?\r\n            <PrimaryButton type=\"submit\">Update</PrimaryButton> :\r\n            <DisabledButton>Update</DisabledButton>;\r\n\r\n        const infoBox = <Modal\r\n            title=\"Good to Know: Fuel\"\r\n            triggerText=\"?\">\r\n            <p>\r\n                While there may be benefits to using mid-grade (sometimes labelled \"Plus\") or premium fuel,\r\n                most consumer vehicles in the US will run just fine on regular unleaded. Generally speaking,\r\n                it is best to follow the recommendations in your owner's manual.\r\n            </p>\r\n        </Modal>;\r\n\r\n        return (\r\n            <MinimizableCard title=\"Price of Gas\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.regular}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.regular)}\r\n                        onChange={this.onChange} />\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.mid}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.mid)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.premium}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.premium)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.diesel}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.diesel)}\r\n                        onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    {updateButton} {infoBox}\r\n                </form>\r\n            </MinimizableCard>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Car } from \"./Car\";\r\nimport { fuelString, FuelType, FuelPrice } from \"../Fuel\"\r\n\r\ninterface AdderState {\r\n    car: Car;\r\n    error: boolean;\r\n}\r\n\r\n// Form used for adding new cars\r\nexport class Adder extends React.Component<\r\n    { addCar: (data: Car) => void }, AdderState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default values for new cars\r\n        this.state = {\r\n            'car': new Car(),\r\n            error: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n    }\r\n\r\n    addCar(state) {\r\n        // Add new car\r\n        this.props.addCar(state);\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Update state to reflect input values\r\n        let temp = this.state.car;\r\n        let new_value: any = event.target.value;\r\n\r\n        // TODO: Might want to revise second condition\r\n        if (event.target.type == \"number\" || !isNaN(event.target.value)) {\r\n            new_value = parseFloat(new_value);\r\n        }\r\n\r\n        temp[event.target.id] = new_value;\r\n        this.setState({ car: temp });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.addCar(this.state.car);\r\n        event.preventDefault(); // Stop reloading page\r\n\r\n        // Reset car (but only if non-errored)\r\n        this.setState({ car: new Car() });\r\n    }\r\n\r\n    fuelOption(type: FuelType) {\r\n        return <option value={type}>{fuelString(type)}</option>;\r\n    }\r\n\r\n    render() {\r\n        var errorMessage;\r\n\r\n        if (this.state.error) {\r\n            errorMessage = <p>Car with the same name already exists.</p>;\r\n        }\r\n\r\n        return <form onSubmit={this.handleSubmit} id=\"addCar\">\r\n            {errorMessage}\r\n\r\n            <div className=\"form-group\">\r\n                <label>Name\r\n                    <input className=\"form-control\" name=\"Name\" id=\"name\" onChange={this.handleChange} required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>Fuel Type\r\n                        <select className=\"form-control\" name=\"Fuel Type\" id=\"fuelType\" onChange={this.handleChange}>\r\n                            {this.fuelOption(FuelType.regular)}\r\n                            {this.fuelOption(FuelType.mid)}\r\n                            {this.fuelOption(FuelType.premium)}\r\n                            {this.fuelOption(FuelType.diesel)}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>MPG\r\n                    <input className=\"form-control\" type=\"number\" name=\"MPG\" id=\"mpg\" onChange={this.handleChange} required />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price\r\n                    <input className=\"form-control\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={this.state.car.price}\r\n                        name=\"Price\"\r\n                        id=\"price\"\r\n                        onChange={this.handleChange}\r\n                        required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Insurance (Monthly)\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.insurance}\r\n                            name=\"Insurance\"\r\n                            id=\"insurance\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Vehicle Registration\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.registration}\r\n                            name=\"Registration\"\r\n                            id=\"registration\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Car } from \"./Car\";\r\nimport { fuelString, FuelType, FuelPrice } from \"../Fuel\";\r\nimport { Button } from \"../Buttons\";\r\nimport { DeleteConfirm } from \"../DeleteConfirm\";\r\nimport { CarDatabase } from \"../CarDatabase\";\r\nimport { NumberField, GasField } from \"./CarFields\";\r\n\r\ninterface ListingState {\r\n    carData: Car;\r\n    isEditable: boolean;\r\n}\r\n\r\ninterface ListingProps {\r\n    data: Car;\r\n    updateCar: (data: Car) => void;\r\n    removeCar: (car: number) => void;\r\n}\r\n\r\nfunction formatMoney(value: number) {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n    return formatter.format(value);\r\n}\r\n\r\n// An individual car listing\r\nexport class CarListing extends React.Component<ListingProps, ListingState> {\r\n    constructor(props: ListingProps) {\r\n        super(props);\r\n        this.state = {\r\n            carData: props.data,\r\n            isEditable: false\r\n        };\r\n\r\n        this.updateMpg = this.updateMpg.bind(this);\r\n        this.updatePrice = this.updatePrice.bind(this);\r\n        this.updateRegistration = this.updateRegistration.bind(this);\r\n        this.updateInsurance = this.updateInsurance.bind(this);\r\n        this.updateFuel = this.updateFuel.bind(this);\r\n        this.makeEditable = this.makeEditable.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    makeEditable(event) {\r\n        this.setState({ isEditable: !this.state.isEditable });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.setState({\r\n            isEditable: false\r\n        });\r\n\r\n        this.props.updateCar(this.state.carData);\r\n    }\r\n\r\n    updateMpg(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.mpg = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updatePrice(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.price = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updateInsurance(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.insurance = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updateRegistration(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.registration = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updateFuel(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.fuelType = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var gasFieldOptions = new Map();\r\n        for (var i = 0; i < 4; i++)\r\n        {\r\n            gasFieldOptions.set(i, fuelString(i)); \r\n        }\r\n\r\n        var editButton = !this.state.isEditable ?\r\n            <img src=\"./img/edit-24px.svg\" alt=\"Edit\" onClick={this.makeEditable} /> :\r\n            <img src=\"./img/save-24px.svg\" alt=\"Save\" onClick={this.handleSubmit} />;\r\n\r\n        return (\r\n            <li className=\"car-listing list-group-item\">\r\n                <span style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\"\r\n                }}>\r\n                    {this.props.data.name}\r\n                    <span style={{ paddingLeft: \"4px\" }}>\r\n                        {editButton}\r\n                        <DeleteConfirm className=\"btn-sm\" delete={this.props.removeCar}></DeleteConfirm>\r\n                    </span>\r\n                </span>\r\n                <div className=\"details\">\r\n                    <NumberField\r\n                        label=\"MPG\"\r\n                        value={this.state.carData.mpg}\r\n                        fieldName=\"mpg\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateMpg}\r\n                    />\r\n                    <NumberField\r\n                        label=\"Price\"\r\n                        value={this.state.carData.price}\r\n                        fieldName=\"price\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updatePrice}\r\n                        formatter={formatMoney}\r\n                    />\r\n                    <GasField\r\n                        label=\"Fuel Type\"\r\n                        value={this.state.carData.fuelType}\r\n                        options={gasFieldOptions}\r\n                        fieldName=\"fuelType\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateFuel}\r\n                    />\r\n                    <NumberField\r\n                        label=\"Insurance\"\r\n                        value={this.state.carData.insurance}\r\n                        fieldName=\"insurance\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateInsurance}\r\n                        formatter={(value) => formatMoney(value) + \"/month\"}\r\n                    />\r\n                    <NumberField\r\n                        label=\"Registration\"\r\n                        value={this.state.carData.registration}\r\n                        fieldName=\"registration\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateRegistration}\r\n                        formatter={(value) => formatMoney(value) + \"/year\"}\r\n                    />\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}","// Represents data fields that can alternate between\r\n// display and editing modes\r\n\r\nimport * as React from \"react\";\r\nimport { FuelType } from \"../Fuel\";\r\n\r\ninterface FieldProps<ValueType> {\r\n    label: string;\r\n    value: ValueType;\r\n    fieldName: string;\r\n    isEditable: boolean;\r\n    onChange?: (event: any) => void;\r\n\r\n    // Function for formatting the output string\r\n    formatter?: (value: any) => string;\r\n}\r\n\r\ntype NumberFieldProps = FieldProps<number>;\r\n\r\nexport class NumberField extends React.Component<NumberFieldProps, {}> {\r\n    render() {\r\n        if (this.props.isEditable) {\r\n            return (\r\n                <span>{this.props.label}:\r\n                    <input\r\n                        className=\"form-control form-control-sm\"\r\n                        name={this.props.fieldName}\r\n                        type=\"number\"\r\n                        value={this.props.value}\r\n                        onChange={this.props.onChange}\r\n                    />\r\n                </span>\r\n            );\r\n        }\r\n\r\n        var displayText: any = this.props.value;\r\n        if ('formatter' in this.props) {\r\n            displayText = this.props.formatter(displayText);\r\n        }\r\n\r\n        return (\r\n            <span>{this.props.label}: {displayText}</span>\r\n        );\r\n    }\r\n}\r\n\r\ninterface GasFieldProps extends FieldProps<FuelType> {\r\n    options: Map<any, string>;\r\n}\r\n\r\nexport class GasField extends React.Component<GasFieldProps, {}> {\r\n    render() {\r\n        if (this.props.isEditable) {\r\n            return (\r\n                <span>{this.props.label}:\r\n                    <select\r\n                        className=\"custom-select custom-select-sm\"\r\n                        name={this.props.fieldName}\r\n                        onChange={this.props.onChange}\r\n                        defaultValue={this.props.value.toString()}\r\n                    >\r\n                        {Array.from(this.props.options).map((i) =>\r\n                            <option value={i[0]}>{i[1]}</option>)}\r\n                    </select>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span>{this.props.label}: {this.props.options.get(this.props.value)}</span>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface FileLoaderProps {\r\n    loadFile: (data: object) => void;\r\n}\r\n\r\ninterface FileLoaderState {\r\n    filename: string;\r\n}\r\n\r\n// Form used for reading Auto Cost Calculator saved files\r\nexport class FileLoader extends React.Component<FileLoaderProps, FileLoaderState> {\r\n    fileInput: any;\r\n\r\n    constructor(props: FileLoaderProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filename: ''\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.readFile = this.readFile.bind(this);\r\n\r\n        // See: https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    readFile(file: any) {\r\n        /*\r\n         * Ref:\r\n         * https://stackoverflow.com/questions/750032/reading-file-contents-on-the-client-side-in-javascript-in-various-browsers\r\n         */\r\n\r\n        const reader = new FileReader();\r\n        reader.onload =(fileLoadedEvent: Event) => {\r\n            var text = reader.result;\r\n            console.log(text);\r\n            console.log(\"PARSED JSON\", JSON.parse(text.toString()));\r\n            this.props.loadFile(JSON.parse(text.toString()));\r\n        };\r\n\r\n        console.log(\"READING AS TEXT FILE\");\r\n        reader.readAsText(file, \"UTF-8\");\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Submit pressed\");\r\n        event.preventDefault(); // Prevent page refresh\r\n\r\n        let userFile = this.fileInput.current.files[0];\r\n        console.log(\"Uploaded \", userFile.name);\r\n\r\n        this.readFile(userFile);\r\n    }\r\n\r\n    render() {\r\n        return <form onSubmit={this.handleSubmit} id=\"loadFile\">\r\n            <div className=\"form-group\">\r\n                <label>File\r\n                    <input className=\"form-control\" type=\"file\" ref={this.fileInput} />\r\n                    </label>\r\n                </div>\r\n            </form>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { FlexibleXYPlot, XAxis, YAxis, DiscreteColorLegend, HorizontalGridLines, LineSeries } from 'react-vis';\r\n\r\ninterface GraphProps {\r\n    data: Map<string, Array<object>>;\r\n}\r\n\r\nexport default class Graph extends React.Component<GraphProps> {\r\n    render() {\r\n        let series = Array.from(this.props.data.entries());\r\n        let keys = Array.from(this.props.data.keys());\r\n        console.log(series);\r\n        console.log(keys);\r\n\r\n        return <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            width: '100%',\r\n            height: '100%'\r\n        }}>\r\n            <FlexibleXYPlot\r\n                title=\"Cost of Ownership\"\r\n                margin={{\r\n                    left: 50,\r\n                    right: 10,\r\n                    top: 10,\r\n                    bottom: 10\r\n                        }}>\r\n\r\n                <HorizontalGridLines />\r\n                {series.map(kv => (\r\n                    <LineSeries\r\n                        key={kv[0]}\r\n                        data={kv[1]}\r\n                   />\r\n                ))}\r\n                <XAxis />\r\n                <YAxis />\r\n            </FlexibleXYPlot>\r\n          <DiscreteColorLegend items={keys} />\r\n        </div>\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nclass MileageChangerProps {\r\n    mileage: number;\r\n    updateMileage: any;\r\n}\r\n\r\nexport default class MileageChanger extends React.Component<\r\n    MileageChangerProps, { mileage: number }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mileage: 12000\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const _mileage = event.target.value;\r\n\r\n        this.setState({\r\n            mileage: _mileage\r\n        });\r\n\r\n        this.props.updateMileage(_mileage);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Mileage\" id=\"mileage\"\r\n                min=\"0\"\r\n                max=\"100000\"\r\n                type=\"range\"\r\n                value={this.state.mileage}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"mileage\" className=\"col-sm col-form-label\">\r\n                <b>Miles Per: </b>\r\n                Year: {this.state.mileage} &nbsp;\r\n                Month: {Math.round(this.state.mileage / 12)} &nbsp;\r\n                Day: {Math.round(this.state.mileage / 365)} \r\n            </label>\r\n        </form>\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface MonthChangerProps {\r\n    months: number;\r\n    updateMonths: any;\r\n}\r\n\r\nexport default class MonthChanger extends React.Component<MonthChangerProps, { months: number }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            months: this.props.months\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const _months = event.target.value;\r\n\r\n        this.setState({\r\n            months: _months\r\n        });\r\n\r\n        this.props.updateMonths(_months);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Months\" id=\"months\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                type=\"number\"\r\n                value={this.state.months}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"months\" className=\"col-sm col-form-label\">\r\n                <b>Months to Show</b>\r\n            </label>\r\n        </form>\r\n    }\r\n}"],"sourceRoot":""}