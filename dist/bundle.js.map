{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Globals.tsx","webpack:///./src/components/CarDatabase.tsx","webpack:///./src/components/MinimizableCard.tsx","webpack:///./src/components/helpers.tsx","webpack:///./src/components/DeleteConfirm.tsx","webpack:///./src/components/charts/MileageChanger.tsx","webpack:///./src/components/charts/MonthChanger.tsx","webpack:///./src/index.tsx","webpack:///./src/components/AutoCostCalculator.tsx","webpack:///./src/components/Car/List.tsx","webpack:///./src/components/Car/Adder.tsx","webpack:///./src/components/Car/CarListing.tsx","webpack:///./src/components/Car/CarFields.tsx","webpack:///./src/components/FileLoader.tsx","webpack:///./src/components/MainDisplay.tsx","webpack:///./src/components/Tabs.tsx","webpack:///./src/components/Car/Table.tsx","webpack:///./src/components/charts/Graph.tsx","webpack:///./src/components/charts/BarGraph.tsx","webpack:///./src/components/Fuel.tsx","webpack:///./src/components/Car/Car.tsx","webpack:///./src/components/Modal.tsx","webpack:///./src/components/Buttons.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","cars","Car","FuelType","regular","carDb","CarDatabase","addCar","defaultPpg","FuelPrice","set","mid","premium","diesel","this","Map","nextId","tempCar","load","ret","car","values","dump","Array","from","record","id","delete","clear","React","Component","props","super","minimize","state","setState","minimized","title","Fragment","style","float","titleCorner","children","className","overflowX","overflowY","height","lo","hi","dollars","toFixed","mapData","k","v","confirm","toggle","text","deleteButton","src","onClick","alt","DangerButton","PrimaryButton","handleChange","event","mileage","target","updateMileage","min","max","type","onChange","htmlFor","Math","round","months","updateMonths","step","defaults","Globals","Defaults","savedData","localStorage","getItem","ppg","JSON","parse","removeAll","ReactDOM","render","AutoCostCalculator","document","getElementById","ResponsiveReactGridLayout","WidthProvider","Responsive","LocalStorageKey","temp_modals_visible","modalsVisible","dynamicComponents","toJson","updateCar","updateGasPrice","removeCar","undoChanges","reset","save","loadData","saveFile","_ppg","jsonData","setItem","stringify","blob","Blob","saveAs","MainDisplay","lazy","saveControls","Modal","submit","buttonName","formName","buttonProps","triggerText","FileLoader","loadFile","ModalContainer","layouts","lg","x","y","w","h","breakpoints","md","sm","xs","xxs","cols","rowHeight","draggableHandle","Suspense","fallback","GasPriceChanger","CarList","DeleteConfirm","controls","Adder","MinimizableCard","toArray","map","CarListing","error","handleSubmit","temp","new_value","isNaN","parseFloat","preventDefault","fuelString","errorMessage","onSubmit","required","fuelOption","price","insurance","registration","formatMoney","Intl","NumberFormat","currency","format","carData","isEditable","updateMpg","updatePrice","updateRegistration","updateInsurance","updateFuel","makeEditable","newCarData","mpg","fuelType","gasFieldOptions","editButton","display","flexDirection","alignItems","paddingLeft","NumberField","label","fieldName","formatter","GasField","options","displayText","defaultValue","toString","filename","readFile","fileInput","createRef","file","reader","FileReader","onload","fileLoadedEvent","console","log","readAsText","userFile","current","files","ref","activeTab","annualMileage","setActive","Graph","MileageChanger","MonthChanger","width","makeGraphData","alignContent","BarGraph","costs","costToDriveMonth","numMonths","body","getChart","Table","Tabs","items","activeItem","TabItem","role","newTab","dataset","colSpan","money","fuelCost","lineData","entries","ResponsiveLine","margin","top","right","bottom","left","axisRight","axisTop","axisBottom","legend","axisLeft","curve","xScale","yScale","stacked","enableSlices","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","ResponsiveBar","keys","indexBy","padding","colors","scheme","defs","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","labelSkipWidth","labelSkipHeight","labelTextColor","modifiers","dataFrom","animate","motionStiffness","motionDamping","Number","jsonifyMap","GasPriceChangerColumn","minWidth","fuelPrice","updateable","temp_ppg","targetKey","parseInt","newPpg","updateButton","DisabledButton","infoBox","ServiceFrequency","monthlyMileage","miles","container","currentModal","tabIndex","visible","clearModal","renderModal","form","Button","classNames","join","disabled"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([207,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Default values for the Car Cost Calculator\r\n\r\nimport { CarDatabase } from \"./CarDatabase\";\r\nimport { FuelType, FuelPrice } from \"./Fuel\";\r\nimport { Car } from \"./Car/Car\";\r\n\r\nexport class Defaults {\r\n    cars(): CarDatabase {\r\n        let cars: Array<Car> = [\r\n            new Car({\r\n                'name': '2018 Ford F-150',\r\n                'mpg': 23,\r\n                'price': 27705,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Chevrolet Silverado 1500',\r\n                'mpg': 21,\r\n                'price': 28300,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Ram 1500',\r\n                'mpg': 23,\r\n                'price': 27295,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Toyota RAV4',\r\n                'mpg': 26,\r\n                'price': 24660,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Nissan Rogue',\r\n                'mpg': 29,\r\n                'price': 24800,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n            new Car({\r\n                'name': '2018 Toyota Camry',\r\n                'mpg': 34,\r\n                'price': 23645,\r\n                'fuelType': FuelType.regular,\r\n                'insurance': 0,\r\n                'registration': 0\r\n            }),\r\n        ];\r\n\r\n        let carDb = new CarDatabase();\r\n        for (var i in cars) {\r\n            carDb.addCar(cars[i]);\r\n        }\r\n\r\n        return carDb;\r\n    }\r\n\r\n   ppg() : FuelPrice {\r\n        var defaultPpg = new FuelPrice();\r\n        defaultPpg.set(FuelType.regular, 2.87);\r\n        defaultPpg.set(FuelType.mid, 3.15);\r\n        defaultPpg.set(FuelType.premium, 3.4);\r\n        defaultPpg.set(FuelType.diesel, 3.18);\r\n        return defaultPpg;\r\n    }\r\n}","import { Car } from \"./Car/Car\";\r\nimport { IJsonSerializable } from \"./IJsonSerializable\";\r\nimport { jsonifyMap } from \"./helpers\";\r\n\r\n// Stores information of all cars in the app\r\nexport class CarDatabase implements IJsonSerializable {\r\n    load(data: object) {\r\n        // data is assumed to be a JSON array\r\n        for (let i in data) {\r\n            let tempCar = new Car();\r\n            tempCar.load(data[i]);\r\n            this.addCar(tempCar);\r\n        }\r\n    }\r\n\r\n    dump(): object {\r\n        let ret = [];\r\n        for (let car of this.data.values()) {\r\n            ret.push(car.dump());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    data: Map<number, Car>;\r\n\r\n    // The ID assigned to the next listing\r\n    nextId: number;\r\n\r\n    constructor() {\r\n        this.data = new Map<number, Car>();\r\n        this.nextId = 0;\r\n    }\r\n\r\n    // Return an array of cars\r\n    toArray() {\r\n        return Array.from(this.data.values());\r\n    }\r\n\r\n    // Add a car listing\r\n    addCar(record: Car) {\r\n        record.id = this.nextId;\r\n        this.data.set(this.nextId, record);\r\n        this.nextId++;\r\n    }\r\n\r\n    // Update a car listing\r\n    updateCar(id: number, data: Car) {\r\n        this.data.set(id, data);\r\n    }\r\n\r\n    // Remove a car by ID\r\n    removeCar(id: number) {\r\n        return this.data.delete(id);\r\n    }\r\n\r\n    // Remove all car listings\r\n    removeAll() {\r\n        this.data.clear();\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface MinimizeTriggerProps {\r\n    onClick: any;\r\n    minimized: boolean;\r\n}\r\n\r\nclass MinimizeTrigger extends React.Component<MinimizeTriggerProps> {\r\n    render() {\r\n        var text = '[-]';\r\n        if (this.props.minimized) {\r\n            text = '[+]';\r\n        }\r\n\r\n        return <a\r\n            role='button'\r\n            onClick={this.props.onClick}\r\n            style={{float: 'left'}}>\r\n            {text}\r\n        </a>;\r\n        \r\n    }\r\n}\r\n\r\ninterface MinimizableCardProps {\r\n    title: string;\r\n    titleCorner?: JSX.Element;\r\n    children: JSX.Element;\r\n}\r\n\r\nexport class MinimizableCard extends React.Component<MinimizableCardProps, {\r\n    minimized: boolean\r\n}> {\r\n    // A card that can be minimized\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.minimize = this.minimize.bind(this);\r\n\r\n        this.state = {\r\n            'minimized': false\r\n        };\r\n    }\r\n\r\n    minimize() {\r\n        this.setState({\r\n            'minimized': !this.state['minimized']\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const minimized = this.state['minimized'];\r\n\r\n        var title: any = this.props.title;\r\n        if ('titleCorner' in this.props) {\r\n            title = <React.Fragment>\r\n                {this.props.title}\r\n\r\n                <div style={{ float: \"right\" }}>\r\n                    {this.props.titleCorner}\r\n                </div>\r\n            </React.Fragment>;\r\n        }\r\n\r\n        var children = <div className=\"card-body\" style={{\r\n            overflowX: \"hidden\",\r\n            overflowY: \"hidden\"\r\n        }}>\r\n            {this.props.children}\r\n        </div>;\r\n\r\n        if (minimized) {\r\n            children = null;\r\n        }\r\n\r\n        // Stretch to fit flexible box height wise\r\n        // <MinimizeTrigger onClick={this.minimize} minimized={minimized} />\r\n        return <div className=\"card\" style={{ height: \"100%\" }}>\r\n            <div className=\"card-header\">\r\n                {title}\r\n            </div>\r\n            {children}\r\n        </div>\r\n    }\r\n}","export function range(lo: number, hi: number): Array<number> {\r\n    let ret: number[] = [];\r\n\r\n    for (let i: number = lo; i < hi; i++) {\r\n        ret.push(i);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function money(dollars: number): string {\r\n    // Given a number, format it with a dollar symbol\r\n    return '$' + dollars.toFixed(2);\r\n}\r\n\r\n// Return a JSON representation of a JavaScript map\r\nexport function jsonifyMap(data: Map<any, any>): object {\r\n    let mapData = {};\r\n\r\n    for (var [k, v] of data) {\r\n        mapData[k] = v;\r\n    }\r\n\r\n    return mapData;\r\n}","import * as React from \"react\";\r\nimport { DangerButton, PrimaryButton } from \"./Buttons\";\r\n\r\ninterface DeleteConfirmProps {\r\n    text?: string;\r\n    className?: string;\r\n    delete: (param?: any) => void;\r\n}\r\n\r\nexport class DeleteConfirm extends React.Component<DeleteConfirmProps, { confirm: boolean }> {\r\n    /*\r\n     * Delete button which changes to a confirm prompt before\r\n     * finally doing the deed\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            confirm: false\r\n        };\r\n\r\n        this.delete = this.delete.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    delete() {\r\n        this.props.delete();\r\n        this.setState({ confirm: false });\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ confirm: !this.state.confirm });\r\n    }\r\n\r\n    render() {\r\n        const text = ('text' in this.props) ? this.props.text : 'x';\r\n        let deleteButton = <img src=\"./img/delete-24px.svg\" onClick={this.toggle} alt=\"Delete\" />;\r\n\r\n        if ('text' in this.props) {\r\n            deleteButton = <DangerButton className={this.props.className} onClick={this.toggle}>{text}</DangerButton>;\r\n        }\r\n\r\n        return this.state.confirm ?\r\n            <React.Fragment>\r\n                <DangerButton className={this.props.className}\r\n                    onClick={this.delete}>Confirm</DangerButton>\r\n                <PrimaryButton className={this.props.className} onClick={this.toggle}>Cancel</PrimaryButton>\r\n            </React.Fragment> :\r\n            deleteButton;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nclass MileageChangerProps {\r\n    mileage: number;\r\n    updateMileage: (mileage: number) => void;\r\n}\r\n\r\nexport default class MileageChanger extends React.Component<\r\n    MileageChangerProps> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const mileage = event.target.value;\r\n        this.props.updateMileage(mileage);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Mileage\" id=\"mileage\"\r\n                min=\"0\"\r\n                max=\"100000\"\r\n                type=\"range\"\r\n                value={this.props.mileage}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"mileage\" className=\"col-sm col-form-label\">\r\n                <b>Miles Per: </b>\r\n                Year: {this.props.mileage} &nbsp;\r\n                Month: {Math.round(this.props.mileage / 12)} &nbsp;\r\n                Day: {Math.round(this.props.mileage / 365)}\r\n            </label>\r\n        </form>\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface MonthChangerProps {\r\n    months: number;\r\n    updateMonths: (numMonths: number) => void;\r\n}\r\n\r\nexport default class MonthChanger extends React.Component<MonthChangerProps> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const months = event.target.value;\r\n        this.props.updateMonths(months);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Months\" id=\"months\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                type=\"number\"\r\n                value={this.props.months}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"months\" className=\"col-sm col-form-label\">\r\n                <b>Months to Show</b>\r\n            </label>\r\n        </form>\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport * as Globals from \"./components/Globals\"\r\nimport { AutoCostCalculator } from \"./components/AutoCostCalculator\"\r\n\r\nlet defaults = (new Globals.Defaults());\r\n\r\nlet savedData = localStorage.getItem('autoCostData');\r\nlet carDb = defaults.cars();\r\nlet ppg = defaults.ppg();\r\n\r\nif (savedData != null) {\r\n    savedData = JSON.parse(savedData);\r\n    carDb.removeAll();\r\n    carDb.load(savedData['data']);\r\n    ppg.load(savedData['ppg']);\r\n}\r\n\r\nReactDOM.render(\r\n    <AutoCostCalculator data={carDb} ppg={ppg} />,\r\n    document.getElementById('root')\r\n);","import * as React from \"react\";\r\nimport { saveAs } from 'file-saver';\r\nimport { ModalContainer, Modal } from \"./Modal\";\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\n\r\nimport { FuelPrice, GasPriceChanger } from \"./Fuel\";\r\n\r\nimport { CarDatabase } from \"./CarDatabase\";\r\nimport { Car } from \"./Car/Car\";\r\nimport { CarList as CarList } from \"./Car/List\";\r\nimport { Defaults } from \"./Globals\";\r\nimport { FileLoader } from \"./FileLoader\";\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\n// Key of the localStorage entry that Auto Cost Calculator save data will be stored\r\nconst LocalStorageKey = \"autoCostData\";\r\n\r\ninterface AutoCostCalcProps {\r\n    data: CarDatabase;\r\n    ppg: FuelPrice;\r\n};\r\n\r\ninterface AutoCostCalcState extends AutoCostCalcProps{\r\n    modalsVisible: Map<string, boolean>;\r\n};\r\n\r\nexport class AutoCostCalculator extends React.Component<AutoCostCalcProps, AutoCostCalcState> {\r\n    dynamicComponents: object;\r\n    modalRef: any;\r\n\r\n    constructor(props: AutoCostCalcProps) {\r\n        super(props);\r\n\r\n        let temp_modals_visible: Map<string, boolean> = new Map([\r\n            ['carAdder', false]\r\n        ]);\r\n        \r\n        this.state = {\r\n            data: props.data,\r\n            ppg: props.ppg,\r\n            modalsVisible: temp_modals_visible\r\n        };\r\n\r\n        this.dynamicComponents = {};\r\n\r\n        this.toJson = this.toJson.bind(this);\r\n        this.updateCar = this.updateCar.bind(this);\r\n        this.updateGasPrice = this.updateGasPrice.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n        this.removeAll = this.removeAll.bind(this);\r\n        this.removeCar = this.removeCar.bind(this);\r\n        this.undoChanges = this.undoChanges.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.loadData = this.loadData.bind(this);\r\n        this.saveFile = this.saveFile.bind(this);\r\n    }\r\n    \r\n    updateGasPrice(_ppg: FuelPrice) {\r\n        this.setState({\r\n            ppg: _ppg\r\n        });\r\n    }\r\n\r\n    // Add car listing\r\n    addCar(data: Car) {\r\n        this.state.data.addCar(data);\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Update an individual cars\r\n    updateCar(id: number, data: Car) {\r\n        this.state.data.updateCar(id, data);\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Remove all car listings\r\n    removeAll() {\r\n        this.state.data.removeAll();\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Remove an individual car\r\n    removeCar(id: number) {\r\n        this.state.data.removeCar(id);\r\n        this.setState({ data: this.state.data });\r\n    }\r\n\r\n    // Reset any changes made since the last save state\r\n    undoChanges() {\r\n        let jsonData = localStorage.getItem(LocalStorageKey);\r\n        this.loadData(JSON.parse(jsonData));\r\n    }\r\n\r\n    // Restore original defaults\r\n    reset() {\r\n        let defaults = new Defaults();\r\n\r\n        this.setState({\r\n            data: defaults.cars(),\r\n            ppg: defaults.ppg()\r\n        });\r\n\r\n        this.save();\r\n    }\r\n\r\n    // Load previously saved data stored in a JSON format\r\n    loadData(data: object) {\r\n        let ppg = new FuelPrice();\r\n        ppg.load(data['ppg']);\r\n\r\n        let cars = new CarDatabase();\r\n        cars.load(data['data']);\r\n\r\n        this.setState({\r\n            ppg: ppg,\r\n            data: cars\r\n        });\r\n\r\n        this.save();\r\n    }\r\n\r\n    // Dump the current state in JSON format\r\n    toJson(): object {\r\n        let jsonData = {};\r\n        jsonData['ppg'] = this.state.ppg.dump();\r\n        jsonData['data'] = this.state.data.dump();\r\n        return jsonData;\r\n    }\r\n\r\n    // Save the auto cost calculator's state to local storage\r\n    save() {\r\n        localStorage.setItem(LocalStorageKey, JSON.stringify(this.toJson()));\r\n    }\r\n\r\n    // Save data to an external file\r\n    saveFile() {\r\n        var blob = new Blob([JSON.stringify(this.toJson())],\r\n            {\r\n                type: \"text/plain;charset=utf-8\"\r\n            }\r\n        );\r\n\r\n        // TODO: Allow user to change filename\r\n        saveAs(blob, \"auto-cost-data.json\");\r\n    }\r\n\r\n    render() {\r\n        // Grid\r\n        var layouts = {\r\n            lg: [\r\n                { i: 'a', x: 0, y: 0, w: 20, h: 30 },\r\n                { i: 'gas', x: 20, y: 0, w: 10, h: 16 },\r\n                { i: 'c', x: 20, y: 2, w: 10, h: 40 }\r\n            ]\r\n        };\r\n\r\n        let MainDisplay = React.lazy(() => import(\"./MainDisplay\"));\r\n        let saveControls = <div className=\"action-bar\">\r\n            <button className=\"btn btn-primary\"\r\n                onClick={this.undoChanges}>\r\n                <img src=\"./img/undo-24px.svg\" alt=\"Save\" />\r\n                Undo Changes\r\n            </button>\r\n            <Modal submit={{\r\n                buttonName: \"Load\",\r\n                formName: \"loadFile\"\r\n            }}\r\n\r\n                buttonProps={{\r\n                    className: \"btn-primary\"\r\n                }}\r\n\r\n                triggerText=\"Load\" title=\"Load\">\r\n                <FileLoader loadFile={this.loadData} />\r\n            </Modal>\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.save}>\r\n                <img src=\"./img/save-24px.svg\" alt=\"Save\" /> Save</button>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={this.saveFile}\r\n            >\r\n                <img src=\"./img/file_copy-24px.svg\" alt=\"Save\" />\r\n                Save to File</button>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={this.reset}\r\n            >\r\n                <img src=\"./img/refresh-24px.svg\" alt=\"Save\" />\r\n                Restore Defaults</button>\r\n        </div>\r\n\r\n        return <React.Fragment>\r\n            <ModalContainer />\r\n            <div className=\"container-fluid\">\r\n                <h1>Automobile Cost Calculator</h1>\r\n\r\n                {saveControls}\r\n\r\n                <ResponsiveReactGridLayout className=\"layout\" layouts={layouts}\r\n                    breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n                    cols={{ lg: 30, md: 30, sm: 6, xs: 4, xxs: 2 }}\r\n\r\n                    rowHeight={10}\r\n\r\n                    // Make Bootstrap card headers the handle for drap/drop\r\n                    draggableHandle=\"div.card-header\"\r\n\r\n                    // verticalCompact={false}\r\n                >\r\n                    <div key=\"a\">\r\n                        <React.Suspense fallback={<div>Loading...</div>}>\r\n                        <MainDisplay data={this.state.data} ppg={this.state.ppg} />\r\n                        </React.Suspense>\r\n                    </div>\r\n\r\n                    <div key=\"gas\">\r\n                        <GasPriceChanger ppg={this.state.ppg} updateGasPrice={this.updateGasPrice} />\r\n                    </div>\r\n                    <div key=\"c\">\r\n                        <CarList data={this.state.data}\r\n                            addCar={this.addCar}\r\n                            updateCar={this.updateCar}\r\n                            removeAll={this.removeAll}\r\n                            removeCar={this.removeCar}\r\n                        />\r\n                    </div>\r\n                </ResponsiveReactGridLayout>\r\n            </div>\r\n            </React.Fragment>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Car } from \"./Car\";\r\nimport { Adder } from \"./Adder\";\r\nimport { CarListing } from \"./CarListing\";\r\nimport { Modal } from \"../Modal\";\r\nimport { MinimizableCard } from \"../MinimizableCard\";\r\nimport { DeleteConfirm } from \"../DeleteConfirm\";\r\nimport { CarDatabase } from \"../CarDatabase\";\r\n\r\ninterface ListProps {\r\n    data: CarDatabase;\r\n    addCar: (data: Car) => void;\r\n    removeAll: () => void;\r\n    updateCar: (id: number, data: Car) => void;\r\n    removeCar: (car: number) => void;\r\n};\r\n\r\n// A list of vehicles\r\nexport class CarList extends React.Component<ListProps> {\r\n    constructor(props: ListProps) {\r\n        super(props);\r\n    }\r\n\r\n    updateCar(id: number, data: Car) {\r\n        this.props.updateCar(id, data);\r\n    }\r\n\r\n    render() {\r\n        const clearAll = <DeleteConfirm text=\"Clear All\" delete={this.props.removeAll} />;\r\n\r\n        // Controls to add a car and remove all cars\r\n        const controls = <React.Fragment>\r\n            <Modal submit={{\r\n                    buttonName: \"Add\",\r\n                    formName: \"addCar\"\r\n                }}\r\n\r\n                buttonProps={{\r\n                    className: \"btn-sm\"\r\n                }}\r\n\r\n                triggerText=\"Add Vehicle\" title=\"Add Vehicle\">\r\n                <Adder addCar={this.props.addCar} />\r\n            </Modal>\r\n            <DeleteConfirm className=\"btn-sm\" text=\"Clear All\" delete={this.props.removeAll} />\r\n        </React.Fragment>;\r\n\r\n        return <MinimizableCard title=\"Vehicles\" titleCorner={controls}>\r\n            <React.Fragment>\r\n                <div style={{\r\n                    overflowX: \"hidden\",\r\n                    overflowY: \"scroll\"\r\n                }}>\r\n                <ul className=\"list-group list-group-flush\" >\r\n                    {this.props.data.toArray().map((i) => <CarListing\r\n                        data={i}\r\n                        updateCar={this.updateCar.bind(this, i.id)}\r\n                        removeCar={this.props.removeCar.bind(this, i.id)} />)}\r\n                    </ul>\r\n                </div>\r\n            </React.Fragment>\r\n        </MinimizableCard>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Car } from \"./Car\";\r\nimport { fuelString, FuelType, FuelPrice } from \"../Fuel\"\r\n\r\ninterface AdderState {\r\n    car: Car;\r\n    error: boolean;\r\n}\r\n\r\n// Form used for adding new cars\r\nexport class Adder extends React.Component<\r\n    { addCar: (data: Car) => void }, AdderState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default values for new cars\r\n        this.state = {\r\n            'car': new Car(),\r\n            error: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n    }\r\n\r\n    addCar(state) {\r\n        // Add new car\r\n        this.props.addCar(state);\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Update state to reflect input values\r\n        let temp = this.state.car;\r\n        let new_value: any = event.target.value;\r\n\r\n        // TODO: Might want to revise second condition\r\n        if (event.target.type == \"number\" || !isNaN(event.target.value)) {\r\n            new_value = parseFloat(new_value);\r\n        }\r\n\r\n        temp[event.target.id] = new_value;\r\n        this.setState({ car: temp });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.addCar(this.state.car);\r\n        event.preventDefault(); // Stop reloading page\r\n\r\n        // Reset car (but only if non-errored)\r\n        this.setState({ car: new Car() });\r\n    }\r\n\r\n    fuelOption(type: FuelType) {\r\n        return <option value={type}>{fuelString(type)}</option>;\r\n    }\r\n\r\n    render() {\r\n        var errorMessage;\r\n\r\n        if (this.state.error) {\r\n            errorMessage = <p>Car with the same name already exists.</p>;\r\n        }\r\n\r\n        return <form onSubmit={this.handleSubmit} id=\"addCar\">\r\n            {errorMessage}\r\n\r\n            <div className=\"form-group\">\r\n                <label>Name\r\n                    <input className=\"form-control\" name=\"Name\" id=\"name\" onChange={this.handleChange} required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>Fuel Type\r\n                        <select className=\"form-control\" name=\"Fuel Type\" id=\"fuelType\" onChange={this.handleChange}>\r\n                            {this.fuelOption(FuelType.regular)}\r\n                            {this.fuelOption(FuelType.mid)}\r\n                            {this.fuelOption(FuelType.premium)}\r\n                            {this.fuelOption(FuelType.diesel)}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>MPG\r\n                    <input className=\"form-control\" type=\"number\" name=\"MPG\" id=\"mpg\" onChange={this.handleChange} required />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price\r\n                    <input className=\"form-control\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={this.state.car.price}\r\n                        name=\"Price\"\r\n                        id=\"price\"\r\n                        onChange={this.handleChange}\r\n                        required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Insurance (Monthly)\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.insurance}\r\n                            name=\"Insurance\"\r\n                            id=\"insurance\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Vehicle Registration\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.registration}\r\n                            name=\"Registration\"\r\n                            id=\"registration\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Car } from \"./Car\";\r\nimport { fuelString, FuelType, FuelPrice } from \"../Fuel\";\r\nimport { Button } from \"../Buttons\";\r\nimport { DeleteConfirm } from \"../DeleteConfirm\";\r\nimport { CarDatabase } from \"../CarDatabase\";\r\nimport { NumberField, GasField } from \"./CarFields\";\r\n\r\ninterface ListingState {\r\n    carData: Car;\r\n    isEditable: boolean;\r\n}\r\n\r\ninterface ListingProps {\r\n    data: Car;\r\n    updateCar: (data: Car) => void;\r\n    removeCar: (car: number) => void;\r\n}\r\n\r\nfunction formatMoney(value: number) {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n\r\n    return formatter.format(value);\r\n}\r\n\r\n// An individual car listing\r\nexport class CarListing extends React.Component<ListingProps, ListingState> {\r\n    constructor(props: ListingProps) {\r\n        super(props);\r\n        this.state = {\r\n            carData: props.data,\r\n            isEditable: false\r\n        };\r\n\r\n        this.updateMpg = this.updateMpg.bind(this);\r\n        this.updatePrice = this.updatePrice.bind(this);\r\n        this.updateRegistration = this.updateRegistration.bind(this);\r\n        this.updateInsurance = this.updateInsurance.bind(this);\r\n        this.updateFuel = this.updateFuel.bind(this);\r\n        this.makeEditable = this.makeEditable.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    makeEditable(event) {\r\n        this.setState({ isEditable: !this.state.isEditable });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.setState({\r\n            isEditable: false\r\n        });\r\n\r\n        this.props.updateCar(this.state.carData);\r\n    }\r\n\r\n    updateMpg(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.mpg = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updatePrice(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.price = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updateInsurance(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.insurance = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updateRegistration(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.registration = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    updateFuel(event) {\r\n        let newCarData = this.state.carData;\r\n        newCarData.fuelType = event.target.value;\r\n\r\n        this.setState({\r\n            carData: newCarData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var gasFieldOptions = new Map();\r\n        for (var i = 0; i < 4; i++)\r\n        {\r\n            gasFieldOptions.set(i, fuelString(i)); \r\n        }\r\n\r\n        var editButton = !this.state.isEditable ?\r\n            <img src=\"./img/edit-24px.svg\" alt=\"Edit\" onClick={this.makeEditable} /> :\r\n            <img src=\"./img/save-24px.svg\" alt=\"Save\" onClick={this.handleSubmit} />;\r\n\r\n        return (\r\n            <li className=\"car-listing list-group-item\">\r\n                <span style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\"\r\n                }}>\r\n                    {this.props.data.name}\r\n                    <span style={{ paddingLeft: \"4px\" }}>\r\n                        {editButton}\r\n                        <DeleteConfirm className=\"btn-sm\" delete={this.props.removeCar}></DeleteConfirm>\r\n                    </span>\r\n                </span>\r\n                <div className=\"details\">\r\n                    <NumberField\r\n                        label=\"MPG\"\r\n                        value={this.state.carData.mpg}\r\n                        fieldName=\"mpg\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateMpg}\r\n                    />\r\n                    <NumberField\r\n                        label=\"Price\"\r\n                        value={this.state.carData.price}\r\n                        fieldName=\"price\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updatePrice}\r\n                        formatter={formatMoney}\r\n                    />\r\n                    <GasField\r\n                        label=\"Fuel Type\"\r\n                        value={this.state.carData.fuelType}\r\n                        options={gasFieldOptions}\r\n                        fieldName=\"fuelType\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateFuel}\r\n                    />\r\n                    <NumberField\r\n                        label=\"Insurance\"\r\n                        value={this.state.carData.insurance}\r\n                        fieldName=\"insurance\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateInsurance}\r\n                        formatter={(value) => formatMoney(value) + \"/month\"}\r\n                    />\r\n                    <NumberField\r\n                        label=\"Registration\"\r\n                        value={this.state.carData.registration}\r\n                        fieldName=\"registration\"\r\n                        isEditable={this.state.isEditable}\r\n                        onChange={this.updateRegistration}\r\n                        formatter={(value) => formatMoney(value) + \"/year\"}\r\n                    />\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}","// Represents data fields that can alternate between\r\n// display and editing modes\r\n\r\nimport * as React from \"react\";\r\nimport { FuelType } from \"../Fuel\";\r\n\r\ninterface FieldProps<ValueType> {\r\n    label: string;\r\n    value: ValueType;\r\n    fieldName: string;\r\n    isEditable: boolean;\r\n    onChange?: (event: any) => void;\r\n\r\n    // Function for formatting the output string\r\n    formatter?: (value: any) => string;\r\n}\r\n\r\ntype NumberFieldProps = FieldProps<number>;\r\n\r\nexport class NumberField extends React.Component<NumberFieldProps, {}> {\r\n    render() {\r\n        if (this.props.isEditable) {\r\n            return (\r\n                <span>{this.props.label}:\r\n                    <input\r\n                        className=\"form-control form-control-sm\"\r\n                        name={this.props.fieldName}\r\n                        type=\"number\"\r\n                        value={this.props.value}\r\n                        onChange={this.props.onChange}\r\n                    />\r\n                </span>\r\n            );\r\n        }\r\n\r\n        var displayText: any = this.props.value;\r\n        if ('formatter' in this.props) {\r\n            displayText = this.props.formatter(displayText);\r\n        }\r\n\r\n        return (\r\n            <span>{this.props.label}: {displayText}</span>\r\n        );\r\n    }\r\n}\r\n\r\ninterface GasFieldProps extends FieldProps<FuelType> {\r\n    options: Map<any, string>;\r\n}\r\n\r\nexport class GasField extends React.Component<GasFieldProps, {}> {\r\n    render() {\r\n        if (this.props.isEditable) {\r\n            return (\r\n                <span>{this.props.label}:\r\n                    <select\r\n                        className=\"custom-select custom-select-sm\"\r\n                        name={this.props.fieldName}\r\n                        onChange={this.props.onChange}\r\n                        defaultValue={this.props.value.toString()}\r\n                    >\r\n                        {Array.from(this.props.options).map((i) =>\r\n                            <option value={i[0]}>{i[1]}</option>)}\r\n                    </select>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span>{this.props.label}: {this.props.options.get(this.props.value)}</span>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface FileLoaderProps {\r\n    loadFile: (data: object) => void;\r\n}\r\n\r\ninterface FileLoaderState {\r\n    filename: string;\r\n}\r\n\r\n// Form used for reading Auto Cost Calculator saved files\r\nexport class FileLoader extends React.Component<FileLoaderProps, FileLoaderState> {\r\n    fileInput: any;\r\n\r\n    constructor(props: FileLoaderProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filename: ''\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.readFile = this.readFile.bind(this);\r\n\r\n        // See: https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    readFile(file: any) {\r\n        /*\r\n         * Ref:\r\n         * https://stackoverflow.com/questions/750032/reading-file-contents-on-the-client-side-in-javascript-in-various-browsers\r\n         */\r\n\r\n        const reader = new FileReader();\r\n        reader.onload =(fileLoadedEvent: Event) => {\r\n            var text = reader.result;\r\n            console.log(text);\r\n            console.log(\"PARSED JSON\", JSON.parse(text.toString()));\r\n            this.props.loadFile(JSON.parse(text.toString()));\r\n        };\r\n\r\n        console.log(\"READING AS TEXT FILE\");\r\n        reader.readAsText(file, \"UTF-8\");\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Submit pressed\");\r\n        event.preventDefault(); // Prevent page refresh\r\n\r\n        let userFile = this.fileInput.current.files[0];\r\n        console.log(\"Uploaded \", userFile.name);\r\n\r\n        this.readFile(userFile);\r\n    }\r\n\r\n    render() {\r\n        return <form onSubmit={this.handleSubmit} id=\"loadFile\">\r\n            <div className=\"form-group\">\r\n                <label>File\r\n                    <input className=\"form-control\" type=\"file\" ref={this.fileInput} />\r\n                    </label>\r\n                </div>\r\n            </form>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Tabs } from \"./Tabs\";\r\nimport { Table } from \"./Car/Table\";\r\nimport { CarDatabase } from \"./CarDatabase\";\r\nimport { FuelPrice } from \"./Fuel\";\r\n\r\ninterface MainDisplayProps {\r\n    data: CarDatabase;\r\n    ppg: FuelPrice;\r\n}\r\n\r\ninterface MainDisplayState {\r\n    activeTab: string;\r\n    months: number;\r\n    annualMileage: number;\r\n}\r\n\r\nexport default class MainDisplay extends React.Component<MainDisplayProps, MainDisplayState> {\r\n    constructor(props: MainDisplayProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: \"Cost Over Time\",\r\n            months: 48,\r\n            annualMileage: 12000\r\n        };\r\n\r\n        this.updateMileage = this.updateMileage.bind(this);\r\n        this.updateMonths = this.updateMonths.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    getChart() {\r\n        const Graph = React.lazy(() => import(\"./charts/Graph\"));\r\n        const MileageChanger = React.lazy(() => import(\"./charts/MileageChanger\"));\r\n        const MonthChanger = React.lazy(() => import(\"./charts/MonthChanger\"));\r\n\r\n        return <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        }}>\r\n            <React.Suspense fallback={<div>Loading...</div>}>\r\n                <Graph\r\n                    data={this.makeGraphData()}\r\n                />\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    alignContent: 'space-around',\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <div style={{ width: '72.5%' }}>\r\n                        <MileageChanger mileage={this.state.annualMileage} updateMileage={this.updateMileage} />\r\n                    </div>\r\n                    <div style={{ width: '22.5%' }}>\r\n                        <MonthChanger months={this.state.months} updateMonths={this.updateMonths} />\r\n                    </div>\r\n                </div>\r\n            </React.Suspense>\r\n        </div>;\r\n    }\r\n\r\n    getCostPerMonth() {\r\n        const BarGraph = React.lazy(() => import(\"./charts/BarGraph\"));\r\n        const MileageChanger = React.lazy(() => import(\"./charts/MileageChanger\"));\r\n        const MonthChanger = React.lazy(() => import(\"./charts/MonthChanger\"));\r\n\r\n        return <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        }}>\r\n            <React.Suspense fallback={<div>Loading...</div>}>\r\n                <BarGraph />\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    alignContent: 'space-around',\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <div style={{ width: '72.5%' }}>\r\n                        <MileageChanger mileage={this.state.annualMileage} updateMileage={this.updateMileage} />\r\n                    </div>\r\n                    <div style={{ width: '22.5%' }}>\r\n                        <MonthChanger months={this.state.months} updateMonths={this.updateMonths} />\r\n                    </div>\r\n                </div>\r\n            </React.Suspense>\r\n        </div>;\r\n    }\r\n\r\n    makeGraphData(): Map<string, Array<object>> {\r\n        let cars = this.props.data.toArray();\r\n\r\n        // a mapping of car names to arrays of (x, y) pairs\r\n        let data = new Map<string, Array<object>>();\r\n\r\n        for (let i in cars) {\r\n            let car = cars[i];\r\n\r\n            // An array of car costs, site-indexed by month\r\n            let costs = [];\r\n\r\n            for (var j = 0; j < this.state.months; j++) {\r\n                costs.push({\r\n                    x: j,\r\n                    y: car.costToDriveMonth(this.state.annualMileage / 12, j, this.props.ppg)\r\n                });\r\n            }\r\n\r\n            data.set(car.name, costs);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    updateMileage(mileage: number) {\r\n        this.setState({\r\n            annualMileage: mileage\r\n        });\r\n    }\r\n\r\n    updateMonths(numMonths: number) {\r\n        this.setState({\r\n            months: numMonths\r\n        });\r\n    }\r\n\r\n    setActive(name: string) {\r\n        this.setState({\r\n            activeTab: name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const tabItems: Array<string> = [\r\n            \"Cost Over Time\",\r\n            // \"Cost Per Month\",\r\n            \"Table\"\r\n        ];\r\n\r\n        let body;\r\n\r\n        if (this.state.activeTab == \"Cost Over Time\") {\r\n            body = this.getChart();\r\n        }\r\n        /*\r\n        else if (this.state.activeTab == \"Cost Per Month\") {\r\n            body = this.getCostPerMonth();\r\n        }\r\n        */\r\n        else {\r\n            body = <Table\r\n                annualMileage={this.state.annualMileage}\r\n                months={this.state.months}\r\n                data={this.props.data}\r\n                ppg={this.props.ppg}\r\n            />; \r\n        }\r\n\r\n        return <div className=\"card\" id=\"graph-panel\" style={{ width: \"100%\", height: \"100%\" }}>\r\n            <div className=\"card-header\">\r\n                <Tabs items={tabItems}\r\n                    activeItem={this.state.activeTab}\r\n                    setActive={this.setActive}\r\n                />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {body}\r\n            </div>\r\n        </div>;\r\n    }\r\n}","// Tab controller and navigation\r\n\r\nimport * as React from \"react\";\r\n\r\ninterface TabItemProps {\r\n    name: string;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class TabItem extends React.Component<TabItemProps> {\r\n    render() {\r\n        let className: string = \"nav-link\";\r\n        if (this.props.activeItem == this.props.name) {\r\n            className = \"nav-link active\";\r\n        }\r\n\r\n        return <li className=\"nav-item\">\r\n            <a\r\n                className={className}\r\n                role=\"button\"\r\n                onClick={this.props.setActive}\r\n                data-name={this.props.name}\r\n            >{this.props.name}</a>\r\n        </li>;\r\n    }\r\n}\r\n\r\ninterface TabProps {\r\n    items: Array<string>;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class Tabs extends React.Component<TabProps, { activeItem: string }> {\r\n    constructor(props: TabProps) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: this.props.activeItem\r\n        };\r\n\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    setActive(event) {\r\n        const newTab: string = event.target.dataset.name;\r\n\r\n        // pass name of new active tab back up\r\n        this.props.setActive(newTab);\r\n    }\r\n\r\n    render() {\r\n        return <ul className=\"nav nav-tabs card-header-tabs\">\r\n            {\r\n                this.props.items.map((i) => <TabItem\r\n                    name={i}\r\n                    activeItem={this.props.activeItem}\r\n                    setActive={this.setActive}\r\n                />)\r\n            }\r\n        </ul>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { FuelPrice } from \"../Fuel\";\r\nimport { money } from \"../helpers\";\r\nimport { Car } from \"./Car\";\r\nimport { CarDatabase } from \"../CarDatabase\";\r\n\r\ninterface TableProps {\r\n    months: number;\r\n    annualMileage: number;\r\n    ppg: FuelPrice;\r\n    data: CarDatabase;\r\n}\r\n\r\nexport class Table extends React.Component<TableProps> {\r\n    render() {\r\n        const ppg = this.props.ppg;\r\n\r\n        return <table>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th colSpan={4}>Cost to Drive (Gas Only)</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>10 Miles</th>\r\n                    <th>25 Miles</th>\r\n                    <th>100 Miles</th>\r\n                    <th>One Month</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.props.data.toArray().map((i) =>\r\n                <tr>\r\n                    <td>{i.name}</td>\r\n                    <td>{money(i.fuelCost(10, ppg))}</td>\r\n                    <td>{money(i.fuelCost(25, ppg))}</td>\r\n                    <td>{money(i.fuelCost(100, ppg))}</td>\r\n                    <td>{money(i.fuelCost(this.props.annualMileage / 12, ppg))}</td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\ninterface GraphProps {\r\n    data: Map<string, Array<object>>;\r\n}\r\n\r\nexport default class Graph extends React.Component<GraphProps> {\r\n    render() {\r\n        let lineData = [];\r\n        for (let [car, data] of this.props.data.entries()) {\r\n            lineData.push({\r\n                id: car,\r\n                data: data\r\n            });\r\n        }\r\n\r\n        return <ResponsiveLine\r\n            data={lineData}\r\n            margin={{\r\n                top: 50,\r\n                right: 200,\r\n                bottom: 50,\r\n                left: 50\r\n            }}\r\n            axisRight={null}\r\n            axisTop={null}\r\n            axisBottom={{\r\n                legend: \"Months\"\r\n            }}\r\n            axisLeft={{\r\n                legend: \"Cost\"\r\n            }}\r\n\r\n            curve=\"linear\"\r\n            xScale={{ type: 'linear' }}\r\n            yScale={{\r\n                type: 'linear',\r\n                stacked: false\r\n            }}\r\n\r\n            enableSlices=\"x\"\r\n\r\n            legends={[\r\n                {\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 100,\r\n                    translateY: 0,\r\n                    itemsSpacing: 0,\r\n                    itemDirection: 'left-to-right',\r\n                    itemWidth: 80,\r\n                    itemHeight: 20,\r\n                    itemOpacity: 0.75,\r\n                    symbolSize: 12,\r\n                    symbolShape: 'circle',\r\n                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n    }\r\n}","import * as React from \"react\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\n\r\nexport default class BarGraph extends React.Component {\r\n    render() {\r\n        let data = [\r\n            {\r\n                \"country\": \"AD\",\r\n                \"hot dog\": 85,\r\n                \"hot dogColor\": \"hsl(310, 70%, 50%)\",\r\n                \"burger\": 106,\r\n                \"burgerColor\": \"hsl(96, 70%, 50%)\",\r\n                \"sandwich\": 10,\r\n                \"sandwichColor\": \"hsl(189, 70%, 50%)\",\r\n                \"kebab\": 146,\r\n                \"kebabColor\": \"hsl(200, 70%, 50%)\",\r\n                \"fries\": 36,\r\n                \"friesColor\": \"hsl(24, 70%, 50%)\",\r\n                \"donut\": 146,\r\n                \"donutColor\": \"hsl(80, 70%, 50%)\"\r\n            },\r\n            {\r\n                \"country\": \"AE\",\r\n                \"hot dog\": 3,\r\n                \"hot dogColor\": \"hsl(318, 70%, 50%)\",\r\n                \"burger\": 89,\r\n                \"burgerColor\": \"hsl(248, 70%, 50%)\",\r\n                \"sandwich\": 40,\r\n                \"sandwichColor\": \"hsl(52, 70%, 50%)\",\r\n                \"kebab\": 36,\r\n                \"kebabColor\": \"hsl(110, 70%, 50%)\",\r\n                \"fries\": 0,\r\n                \"friesColor\": \"hsl(277, 70%, 50%)\",\r\n                \"donut\": 165,\r\n                \"donutColor\": \"hsl(155, 70%, 50%)\"\r\n            },\r\n            {\r\n                \"country\": \"AF\",\r\n                \"hot dog\": 99,\r\n                \"hot dogColor\": \"hsl(253, 70%, 50%)\",\r\n                \"burger\": 101,\r\n                \"burgerColor\": \"hsl(235, 70%, 50%)\",\r\n                \"sandwich\": 78,\r\n                \"sandwichColor\": \"hsl(79, 70%, 50%)\",\r\n                \"kebab\": 87,\r\n                \"kebabColor\": \"hsl(148, 70%, 50%)\",\r\n                \"fries\": 37,\r\n                \"friesColor\": \"hsl(162, 70%, 50%)\",\r\n                \"donut\": 167,\r\n                \"donutColor\": \"hsl(31, 70%, 50%)\"\r\n            },\r\n            {\r\n                \"country\": \"AG\",\r\n                \"hot dog\": 192,\r\n                \"hot dogColor\": \"hsl(29, 70%, 50%)\",\r\n                \"burger\": 137,\r\n                \"burgerColor\": \"hsl(116, 70%, 50%)\",\r\n                \"sandwich\": 97,\r\n                \"sandwichColor\": \"hsl(164, 70%, 50%)\",\r\n                \"kebab\": 137,\r\n                \"kebabColor\": \"hsl(160, 70%, 50%)\",\r\n                \"fries\": 94,\r\n                \"friesColor\": \"hsl(10, 70%, 50%)\",\r\n                \"donut\": 54,\r\n                \"donutColor\": \"hsl(342, 70%, 50%)\"\r\n            },\r\n            {\r\n                \"country\": \"AI\",\r\n                \"hot dog\": 155,\r\n                \"hot dogColor\": \"hsl(296, 70%, 50%)\",\r\n                \"burger\": 180,\r\n                \"burgerColor\": \"hsl(356, 70%, 50%)\",\r\n                \"sandwich\": 10,\r\n                \"sandwichColor\": \"hsl(95, 70%, 50%)\",\r\n                \"kebab\": 14,\r\n                \"kebabColor\": \"hsl(281, 70%, 50%)\",\r\n                \"fries\": 102,\r\n                \"friesColor\": \"hsl(305, 70%, 50%)\",\r\n                \"donut\": 41,\r\n                \"donutColor\": \"hsl(62, 70%, 50%)\"\r\n            },\r\n            {\r\n                \"country\": \"AL\",\r\n                \"hot dog\": 124,\r\n                \"hot dogColor\": \"hsl(293, 70%, 50%)\",\r\n                \"burger\": 87,\r\n                \"burgerColor\": \"hsl(29, 70%, 50%)\",\r\n                \"sandwich\": 2,\r\n                \"sandwichColor\": \"hsl(52, 70%, 50%)\",\r\n                \"kebab\": 168,\r\n                \"kebabColor\": \"hsl(60, 70%, 50%)\",\r\n                \"fries\": 136,\r\n                \"friesColor\": \"hsl(54, 70%, 50%)\",\r\n                \"donut\": 177,\r\n                \"donutColor\": \"hsl(318, 70%, 50%)\"\r\n            },\r\n            {\r\n                \"country\": \"AM\",\r\n                \"hot dog\": 129,\r\n                \"hot dogColor\": \"hsl(295, 70%, 50%)\",\r\n                \"burger\": 196,\r\n                \"burgerColor\": \"hsl(247, 70%, 50%)\",\r\n                \"sandwich\": 81,\r\n                \"sandwichColor\": \"hsl(141, 70%, 50%)\",\r\n                \"kebab\": 148,\r\n                \"kebabColor\": \"hsl(214, 70%, 50%)\",\r\n                \"fries\": 87,\r\n                \"friesColor\": \"hsl(272, 70%, 50%)\",\r\n                \"donut\": 140,\r\n                \"donutColor\": \"hsl(71, 70%, 50%)\"\r\n            }\r\n        ];\r\n\r\n        return <ResponsiveBar\r\n            data={data}\r\n            keys={['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut']}\r\n            indexBy=\"country\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: '#38bcb2',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: '#eed312',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'fries'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'sandwich'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'country',\r\n                legendPosition: 'middle',\r\n                legendOffset: 32\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'food',\r\n                legendPosition: 'middle',\r\n                legendOffset: -40\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            legends={[\r\n                {\r\n                    dataFrom: 'keys',\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            animate={true}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n        />\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Modal } from \"./Modal\";\r\nimport { MinimizableCard } from \"./MinimizableCard\";\r\nimport { DisabledButton, PrimaryButton } from \"./Buttons\";\r\nimport { IJsonSerializable } from \"./IJSONSerializable\";\r\nimport { jsonifyMap } from \"./helpers\";\r\n\r\nexport enum FuelType {\r\n    regular,\r\n    mid,\r\n    premium,\r\n    diesel\r\n}\r\n\r\nexport function fuelString(type: FuelType) {\r\n    switch (type) {\r\n        case FuelType.regular:\r\n            return \"Regular (87)\";\r\n        case FuelType.mid:\r\n            return \"Mid-Grade (89)\";\r\n        case FuelType.premium:\r\n            return \"Premium (92)\";\r\n        case FuelType.diesel:\r\n            return \"Diesel\";  \r\n    }\r\n}\r\n\r\nexport class FuelPrice implements IJsonSerializable {\r\n    constructor() {\r\n        this.data = new Map<FuelType, number>();\r\n    }\r\n\r\n    get(key: FuelType): number {\r\n        return this.data.get(key);\r\n    }\r\n\r\n    set(key: FuelType, value: number): this {\r\n        this.data.set(key, value);\r\n        return this;\r\n    }\r\n\r\n    data: Map<FuelType, number>;\r\n\r\n    load(data: object) {\r\n        for (let k in data) {\r\n            this.data.set(Number(k), data[k]);\r\n        }\r\n    }\r\n\r\n    dump(): object {\r\n        return jsonifyMap(this.data);\r\n    }\r\n}\r\n\r\nclass GasPriceChangerColumn extends React.Component<\r\n    {id: FuelType, fuelPrice: string, onChange: any} ,{}\r\n>    {\r\n    render() {\r\n        return <div\r\n            className=\"form-group col-sm\"\r\n            style={{ minWidth: \"10em\" }}\r\n        >\r\n            <input className=\"form-control\"\r\n                name={fuelString(this.props.id)}\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                id={this.props.id.toString()}\r\n                onChange={this.props.onChange}\r\n                value={this.props.fuelPrice}\r\n            />\r\n            <label\r\n                htmlFor={this.props.id.toString()}\r\n                className=\"col-sm col-form-label\">\r\n                {fuelString(this.props.id)}\r\n            </label>\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface GasPriceProps {\r\n    ppg: FuelPrice;\r\n    updateGasPrice: any; // change\r\n}\r\n\r\ninterface GasPriceState {\r\n    updateable: boolean;\r\n    ppg: FuelPrice;\r\n    temp_ppg: Map<FuelType, string>;\r\n}\r\n\r\nexport class GasPriceChanger extends React.Component<\r\n    GasPriceProps, GasPriceState> {\r\n    constructor(props: GasPriceProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            updateable: false,\r\n            ppg: props.ppg,\r\n            temp_ppg: new Map([\r\n                [FuelType.regular, props.ppg.get(0).toString()],\r\n                [FuelType.mid, props.ppg.get(1).toString()],\r\n                [FuelType.premium, props.ppg.get(2).toString()],\r\n                [FuelType.diesel, props.ppg.get(3).toString()]\r\n            ]),\r\n        };\r\n    }\r\n\r\n    onChange(event) {\r\n        var temp = this.state.temp_ppg;\r\n        let targetKey: FuelType = parseInt(event.target.id);\r\n        temp.set(targetKey, event.target.value);\r\n\r\n        this.setState({\r\n            updateable: true,\r\n            temp_ppg: temp\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        /* \"Update\" button pressed */\r\n\r\n        // Pass updated prices back up to MpgCalculator\r\n        let newPpg = new FuelPrice();\r\n        newPpg.set(FuelType.regular, parseFloat(this.state.temp_ppg.get(FuelType.regular)));\r\n        newPpg.set(FuelType.mid, parseFloat(this.state.temp_ppg.get(FuelType.mid)));\r\n        newPpg.set(FuelType.premium, parseFloat(this.state.temp_ppg.get(FuelType.premium)));\r\n        newPpg.set(FuelType.diesel, parseFloat(this.state.temp_ppg.get(FuelType.diesel)));\r\n\r\n        this.props.updateGasPrice(newPpg);\r\n        event.preventDefault(); // Prevent submit from reloading page\r\n\r\n        // Disable update button\r\n        this.setState({\r\n            updateable: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const updateButton = this.state.updateable ?\r\n            <PrimaryButton type=\"submit\">Update</PrimaryButton> :\r\n            <DisabledButton>Update</DisabledButton>;\r\n\r\n        const infoBox = <Modal\r\n            title=\"Good to Know: Fuel\"\r\n            triggerText=\"?\">\r\n            <p>\r\n                While there may be benefits to using mid-grade (sometimes labelled \"Plus\") or premium fuel,\r\n                most consumer vehicles in the US will run just fine on regular unleaded. Generally speaking,\r\n                it is best to follow the recommendations in your owner's manual.\r\n            </p>\r\n        </Modal>;\r\n\r\n        return (\r\n            <MinimizableCard title=\"Price of Gas\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.regular}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.regular)}\r\n                        onChange={this.onChange} />\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.mid}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.mid)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.premium}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.premium)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerColumn\r\n                        id={FuelType.diesel}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.diesel)}\r\n                        onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    {updateButton} {infoBox}\r\n                </form>\r\n            </MinimizableCard>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Button, DangerButton } from \"../Buttons\";\r\nimport { fuelString, FuelType, FuelPrice } from \"../Fuel\";\r\nimport { MinimizableCard } from \"../MinimizableCard\";\r\nimport { DeleteConfirm } from \"../DeleteConfirm\";\r\nimport { IJsonSerializable } from \"../IJSONSerializable\";\r\n\r\nclass CarData {\r\n    name: string;\r\n    price: number;\r\n    mpg: number;\r\n    insurance: number;    // per month\r\n    registration: number; // per ?\r\n    fuelType: FuelType;\r\n}\r\n\r\nenum ServiceFrequency {\r\n    Month,\r\n    Miles\r\n}\r\n\r\n// Represents a reoccurring car service item, e.g.\r\n// an oil change or tire replacements\r\nclass ServiceItem {\r\n    name: string;\r\n    frequency: number;\r\n    frequencyType: ServiceFrequency;\r\n}\r\n\r\nexport class Car implements IJsonSerializable {\r\n    load(data: object) {\r\n        this.name = data['name'];\r\n        this.price = data['price'];\r\n        this.mpg = data['mpg'];\r\n        this.insurance = data['insurance'];\r\n        this.registration = data['registration'];\r\n        this.fuelType = data['fuelType'];\r\n    }\r\n\r\n    dump(): object {\r\n        return this.data;\r\n    }\r\n\r\n    id: number;\r\n    data: CarData;\r\n\r\n    constructor(data: CarData = {\r\n        name: \"\",\r\n        price: 0,\r\n        mpg: 0,\r\n        insurance: 0,\r\n        registration: 0,\r\n        fuelType: FuelType.regular\r\n    }) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() { return this.data.name; }\r\n    get price() { return this.data.price; }\r\n    get mpg() { return this.data.mpg; }\r\n    get insurance() { return this.data.insurance; }\r\n    get registration() { return this.data.registration; }\r\n    get fuelType() { return this.data.fuelType; }\r\n\r\n    set name(value: any) {\r\n        this.data.name = value;\r\n    }\r\n\r\n    // Make sure values are numeric types and not strings\r\n    set price(value: any) {\r\n        this.data.price = parseFloat(value);\r\n    }\r\n\r\n    set mpg(value: any) {\r\n        this.data.mpg = parseFloat(value);\r\n    }\r\n\r\n    set fuelType(value: any) {\r\n        this.data.fuelType = parseInt(value);\r\n    }\r\n\r\n    set insurance(value: any) {\r\n        this.data.insurance = parseFloat(value);\r\n    }\r\n\r\n    set registration(value: any) {\r\n        this.data.registration = parseFloat(value);\r\n    }\r\n\r\n    // Calculate the total cost to drive a car x months\r\n    costToDriveMonth(monthlyMileage: number, months: number, ppg: FuelPrice): number {\r\n        const miles = months * monthlyMileage;\r\n        let ret = this.price +\r\n            (this.insurance * months) +\r\n\r\n            // Divide annual registration cost by month\r\n            ((this.registration / 12) * months) +\r\n\r\n            this.fuelCost(miles, ppg);\r\n        return ret;\r\n    }\r\n\r\n    fuelCost(miles: number, ppg: FuelPrice): number {\r\n        // Calculate the cost to drive a car (gas only)\r\n        return (miles / this.mpg) * ppg.get(this.fuelType);\r\n    }\r\n}","/** React-Bootstrap Modal System\r\n * \r\n *  Creates a single modal container which handles all requests to display modals.\r\n *  This allows modals to be displayed without interference from other elements.\r\n *  \r\n */\r\n\r\nimport * as React from \"react\";\r\nimport { Button, PrimaryButton } from \"./Buttons\";\r\n\r\nlet container = null; // Keep track of ModalContainer\r\n\r\nexport class ModalContainer extends React.Component<{}, {currentModal: JSX.Element}> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'currentModal': null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Keep track of <ModalContainer />\r\n        container = this;\r\n    }\r\n\r\n    clearModal() {\r\n        this.setState({ 'currentModal': null });\r\n    }\r\n\r\n    render() {\r\n        const currentModal = this.state['currentModal'];\r\n\r\n        return <div className=\"modal\" tabIndex={-1} role=\"dialog\"\r\n            style={{\r\n                display: currentModal ? 'block' : 'none',\r\n                background: 'rgba(0, 0, 0, 0.5)'\r\n            }}>\r\n            {this.state.currentModal}\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface ModalProps {\r\n    submit?: {\r\n        buttonName: string;\r\n        formName: string;\r\n    };\r\n    children?: any;\r\n    title: string;\r\n    triggerText?: string;\r\n    visible?: boolean;\r\n    hideTrigger?: boolean;\r\n    buttonProps?: any;\r\n}\r\n\r\ninterface ModalState {\r\n    visible: boolean;\r\n}\r\n\r\nexport class Modal extends React.Component<ModalProps, ModalState> {\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'visible': ('visible' in this.props) ? this.props.visible : false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        if (!this.state.visible) {\r\n            // If not visisble, then change that\r\n            this.renderModal();\r\n        } else {\r\n            container.clearModal();\r\n        }\r\n\r\n        this.setState({\r\n            'visible': !this.state['visible']\r\n        });\r\n    }\r\n\r\n    renderModal() {\r\n        let submit = this.props.submit ? <PrimaryButton\r\n                type=\"submit\"\r\n                form={this.props.submit.formName}>\r\n                {this.props.submit.buttonName}\r\n            </PrimaryButton> : null;\r\n\r\n        container.setState({\r\n            currentModal:\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{this.props.title}</h5>\r\n\r\n                            <button type=\"button\" className=\"close\"\r\n                                onClick={this.toggle}\r\n                                data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {this.props.children}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            {submit}\r\n                            <Button className=\"btn-secondary\" onClick={this.toggle}\r\n                                data-dismiss=\"modal\">Close</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <PrimaryButton onClick={this.toggle} {...this.props.buttonProps}>\r\n            {this.props.triggerText}\r\n        </PrimaryButton>;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nexport function Button({ className=\"\", ...props }) {\r\n    let classNames = [\"btn\", className].join(\" \");\r\n    return <button type=\"button\" className={classNames} {...props} />\r\n}\r\n\r\nexport function PrimaryButton({ className = \"\", ...props }) {\r\n    let classNames = [\"btn-primary\", className].join(\" \");\r\n    return <Button className={classNames} {...props} />\r\n}\r\n\r\nexport function DisabledButton({ className = \"\", ...props }) {\r\n    let classNames = [\"btn-primary btn-disabled\", className].join(\" \");\r\n    return <Button className={classNames} {...props} disabled />\r\n}\r\n\r\nexport function DangerButton({ className=\"\", ...props }) {\r\n    let classNames = [\"btn-danger\", className].join(\" \");\r\n    return <Button className={classNames} {...props} />\r\n}"],"sourceRoot":""}