{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/Fuel.tsx","webpack:///./src/components/helpers.tsx","webpack:///./src/components/Modal.tsx","webpack:///./src/components/Car.tsx","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/MPGCalculator.tsx","webpack:///./src/components/InfoBox.tsx","webpack:///./src/components/GraphControls.tsx","webpack:///./src/components/Tabs.tsx","webpack:///./src/components/Table.tsx","webpack:///./src/components/MinimizableCard.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","FuelType","InfoBox_1","MinimizableCard_1","fuelString","type","regular","mid","premium","diesel","GasPriceChangerRow","_super","__extends","render","createElement","className","htmlFor","this","props","id","toString","step","min","onChange","fuelPrice","Component","GasPriceChanger","_this","handleSubmit","state","updateable","ppg","temp_ppg","Map","event","temp","targetKey","parseInt","target","set","setState","newPpg","parseFloat","updateGasPrice","preventDefault","updateButton","disabled","header","InfoBox","title","MinimizableCard","onSubmit","range","lo","hi","ret","push","money","dollars","toFixed","Modal","visible","closeModal","handleClick","componentDidUpdate","prevProps","triggerButton","submit","modalStyle","display","triggerText","onClick","form","formName","buttonName","style","tabIndex","role","data-dismiss","aria-label","aria-hidden","children","Fuel_1","Modal_1","Car","data","price","mpg","insurance","registration","fuelType","costToDriveMonth","monthlyMileage","months","miles","costToDriveGasOnly","CarListing","justifyContent","flexDirection","float","removeCar","CarList","CarAdder","addCar","removeAll","map","car","error","handleChange","new_value","isNaN","fuelOption","errorMessage","required","ReactDOM","MPGCalculator_1","Car_1","cars","MpgCalculator","document","getElementById","Helpers","GraphControls_1","Tabs_1","Table_1","Graph","componentDidMount","updateChart","c3","generate","bindto","makeData","axis","x","label","y","graphData","columns","Array","concat","annualMileage","cost","activeTab","updateMileage","updateMonths","setActive","_ppg","mileage","_months","j","body","width","alignContent","MileageChanger","MonthChanger","Table","Tabs","items","activeItem","modalVisible","_mileage","max","Math","round","TabItem","data-name","newTab","dataset","helpers_1","colSpan","minimize","minimized"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = React;","import * as React from \"react\";\r\nimport { Modal } from \"./Modal\";\r\nimport { InfoBox } from \"./InfoBox\";\r\nimport { MinimizableCard } from \"./MinimizableCard\";\r\n\r\nexport enum FuelType {\r\n    regular,\r\n    mid,\r\n    premium,\r\n    diesel\r\n}\r\n\r\nexport function fuelString(type: FuelType) {\r\n    switch (type) {\r\n        case FuelType.regular:\r\n            return \"Regular (87)\";\r\n        case FuelType.mid:\r\n            return \"Mid-Grade (89)\";\r\n        case FuelType.premium:\r\n            return \"Premium (92)\";\r\n        case FuelType.diesel:\r\n            return \"Diesel\";  \r\n    }\r\n}\r\n\r\nexport type FuelPrice = Map<FuelType, number>;\r\n\r\ninterface GasPriceProps {\r\n    ppg: FuelPrice;   // change\r\n    updateGasPrice: any; // change\r\n}\r\n\r\nclass GasPriceChangerRow extends React.Component<\r\n    {id: FuelType, fuelPrice: string, onChange: any} ,{}\r\n>    {\r\n    render() {\r\n        return <div className=\"form-group row\">\r\n            <label\r\n                htmlFor={this.props.id.toString()}\r\n                className=\"col-sm col-form-label\">\r\n                {fuelString(this.props.id)}\r\n            </label>\r\n            <div className=\"col-sm-8\">\r\n                <input className=\"form-control\"\r\n                    name={fuelString(this.props.id)}\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    id={this.props.id.toString()}\r\n                    onChange={this.props.onChange}\r\n                    value={this.props.fuelPrice}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\ninterface GasPriceState {\r\n    updateable: boolean;\r\n    ppg: FuelPrice;\r\n    temp_ppg: Map<FuelType, string>;\r\n}\r\n\r\nexport class GasPriceChanger extends React.Component<\r\n    GasPriceProps, GasPriceState> {\r\n    constructor(props: GasPriceProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            updateable: false,\r\n            ppg: props.ppg,\r\n            temp_ppg: new Map([\r\n                [FuelType.regular, props.ppg.get(0).toString()],\r\n                [FuelType.mid, props.ppg.get(1).toString()],\r\n                [FuelType.premium, props.ppg.get(2).toString()],\r\n                [FuelType.diesel, props.ppg.get(3).toString()]\r\n            ]),\r\n        };\r\n    }\r\n\r\n    onChange(event) {\r\n        var temp = this.state.temp_ppg;\r\n        let targetKey: FuelType = parseInt(event.target.id);\r\n        temp.set(targetKey, event.target.value);\r\n\r\n        this.setState({\r\n            updateable: true,\r\n            temp_ppg: temp\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        /* \"Update\" button pressed */\r\n\r\n        // Pass updated prices back up to MpgCalculator\r\n        let newPpg: FuelPrice = new Map([\r\n            [FuelType.regular, parseFloat(this.state.temp_ppg.get(FuelType.regular))],\r\n            [FuelType.mid, parseFloat(this.state.temp_ppg.get(FuelType.mid))],\r\n            [FuelType.premium, parseFloat(this.state.temp_ppg.get(FuelType.premium))],\r\n            [FuelType.diesel, parseFloat(this.state.temp_ppg.get(FuelType.diesel))]\r\n        ]);\r\n\r\n        this.props.updateGasPrice(newPpg);\r\n        event.preventDefault(); // Prevent submit from reloading page\r\n\r\n        // Disable update button\r\n        this.setState({\r\n            updateable: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let updateButton;\r\n        if (this.state.updateable)\r\n            updateButton = <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\">Update</button>;\r\n        else\r\n            updateButton = <button\r\n                className=\"btn btn-primary disabled\" disabled>Update</button>;\r\n\r\n        const header = <div>Price of Gas <InfoBox\r\n            title=\"Good to Know: Fuel\">\r\n            <p>\r\n                While there may be benefits to using mid-grade (sometimes labelled \"Plus\") or premium fuel,\r\n                most consumer vehicles in the US will run just fine on regular unleaded. Generally speaking,\r\n                it is best to follow the recommendations in your owner's manual.\r\n            </p>\r\n            </InfoBox></div>;\r\n\r\n        return (\r\n            <MinimizableCard header={header}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.regular}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.regular)}\r\n                        onChange={this.onChange} />\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.mid}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.mid)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.premium}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.premium)}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <GasPriceChangerRow\r\n                        id={FuelType.diesel}\r\n                        fuelPrice={this.state.temp_ppg.get(FuelType.diesel)}\r\n                        onChange={this.onChange}\r\n                    />\r\n\r\n                    {updateButton}\r\n                </form>\r\n            </MinimizableCard>\r\n        );\r\n    }\r\n}","export function range(lo: number, hi: number): Array<number> {\r\n    let ret: number[] = [];\r\n\r\n    for (let i: number = lo; i < hi; i++) {\r\n        ret.push(i);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function money(dollars: number): string {\r\n    // Given a number, format it with a dollar symbol\r\n    return '$' + dollars.toFixed(2);\r\n}","import * as React from \"react\";\r\n\r\ninterface ModalProps {\r\n    submit?: {\r\n        buttonName: string;\r\n        formName: string;\r\n    };\r\n    children?: any;\r\n    title: string;\r\n    triggerText?: string;\r\n    visible: boolean;\r\n}\r\n\r\ninterface ModalState {\r\n    visible: boolean;\r\n}\r\n\r\nexport class Modal extends React.Component<ModalProps, ModalState> {\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: this.props.visible\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Update state to reflect visibility prop\r\n        if (prevProps.visible != this.props.visible) {\r\n            this.setState({\r\n                visible: this.props.visible\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        if (this.state.visible)\r\n            this.setState({\r\n                visible: false\r\n            });\r\n        else\r\n            this.setState({\r\n                visible: true\r\n            });\r\n    }\r\n\r\n    closeModal(event) {\r\n        // Handle close button events\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let modalStyle = {};\r\n        if (this.state.visible) {\r\n            modalStyle = {\r\n                display: 'block'\r\n            };\r\n        }\r\n\r\n        let triggerButton;\r\n        if (this.props.triggerText !== null) {\r\n            triggerButton = <button\r\n                className=\"btn btn-primary\"\r\n                onClick={this.handleClick}>\r\n                {this.props.triggerText}\r\n            </button>;\r\n        }\r\n\r\n        var submit;\r\n        if (this.props.submit) {\r\n            submit = <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                form={this.props.submit.formName}>\r\n                {this.props.submit.buttonName}\r\n            </button>\r\n        }\r\n\r\n        return <div style={{ display: 'inline' }}>\r\n        <div className=\"modal\" style={modalStyle} tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">{this.props.title}</h5>\r\n                        <button type=\"button\" className=\"close\" onClick={this.closeModal} data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {this.props.children}\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            {submit}\r\n                            <button type=\"button\" onClick={this.closeModal} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            {triggerButton}\r\n        </div>;\r\n    }   \r\n}","import * as React from \"react\";\r\nimport { fuelString, FuelType, FuelPrice } from \"./Fuel\"\r\nimport { Modal } from \"./Modal\";\r\nimport { MinimizableCard } from \"./MinimizableCard\";\r\n\r\nclass CarData {\r\n    name: string;\r\n    price: number;\r\n    mpg: number;\r\n    insurance: number;    // per month\r\n    registration: number; // per ?\r\n    fuelType: FuelType;\r\n}\r\n\r\nexport class Car extends CarData {\r\n    constructor(data: CarData = {\r\n        name: \"\",\r\n        price: 0,\r\n        mpg: 0,\r\n        insurance: 0,\r\n        registration: 0,\r\n        fuelType: FuelType.regular\r\n    }) {\r\n        super();\r\n        this.name = data.name;\r\n        this.price = data.price;\r\n        this.mpg = data.mpg;\r\n        this.insurance = data.insurance;\r\n        this.registration = data.registration;\r\n        this.fuelType = data.fuelType;\r\n    }\r\n\r\n    costToDriveMonth(monthlyMileage: number, months: number, ppg: FuelPrice): number {\r\n        // Calculate the total cost to drive a car x months\r\n        const miles = months * monthlyMileage;\r\n        return this.price +\r\n            (this.insurance * months) +\r\n            this.costToDriveGasOnly(miles, ppg);\r\n    }\r\n\r\n    costToDriveGasOnly(miles: number, ppg: FuelPrice): number {\r\n        // Calculate the cost to drive a car (gas only)\r\n        return (miles / this.mpg) * ppg.get(this.fuelType);\r\n    }\r\n}\r\n\r\ninterface CarListingProps {\r\n    data: Car;\r\n    removeCar: any; // Fix later\r\n}\r\n\r\nfunction CarListing(props: CarListingProps) {\r\n    return (\r\n        <li className=\"car-listing list-group-item\" style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            flexDirection: 'row'\r\n        }}>\r\n            <div>\r\n                <span>{props.data.name}</span>\r\n                <div className=\"details\">\r\n                    <span>MPG: {props.data.mpg}</span>\r\n                    <span>Price: {props.data.price}</span>\r\n                    <span>Fuel Type: {fuelString(props.data.fuelType)}</span>\r\n                </div>\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm\"\r\n                style={{\r\n                    float: 'right'\r\n                }}\r\n                onClick={props.removeCar}>x</button>\r\n        </li>\r\n    );\r\n}\r\n\r\ninterface CarListProps {\r\n    data: Array<Car>;\r\n    addCar: any; // fix later\r\n    removeAll: any;\r\n    removeCar: any;\r\n};\r\n\r\nexport class CarList extends React.Component<CarListProps> {\r\n    constructor(props: CarListProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const header = <div>\r\n            Vehicles\r\n            <div style={{ float: 'right' }}>\r\n                <Modal\r\n                    title=\"Add Vehicle\"\r\n                    triggerText=\"+\"\r\n                    submit={{\r\n                        buttonName: \"Add\",\r\n                        formName: \"addCar\"\r\n                    }}\r\n                    visible={false}>\r\n                    <CarAdder addCar={this.props.addCar} />\r\n                </Modal>\r\n                <button\r\n                    className=\"btn btn-primary btn-danger\"\r\n                    onClick={this.props.removeAll}>\r\n                    x\r\n                </button>\r\n            </div>\r\n        </div>;\r\n\r\n        return <MinimizableCard header={header}>\r\n            <ul className=\"list-group list-group-flush\">\r\n                {this.props.data.map((i) => <CarListing\r\n                    data={i}\r\n                    removeCar={this.props.removeCar.bind(this, i.name)} />)}\r\n            </ul>\r\n        </MinimizableCard>;\r\n    }\r\n}\r\n\r\ninterface CarAdderProps {\r\n    addCar: any; // fix later\r\n}\r\n\r\ninterface CarAdderState {\r\n    car: Car;\r\n    error: boolean;\r\n}\r\n\r\nclass CarAdder extends React.Component<CarAdderProps, CarAdderState> {\r\n    // Form used for adding new cars\r\n\r\n    constructor(props: CarAdderProps) {\r\n        super(props);\r\n\r\n        // Default values for new cars\r\n        this.state = {\r\n            'car': new Car(),\r\n            error: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n    }\r\n\r\n    addCar(state) {\r\n        // Add new car\r\n        if (!this.props.addCar(state)) {\r\n            // Display error message if car with the same name already exists\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Update state to reflect input values\r\n        let temp: Car = this.state.car;\r\n        let new_value: any = event.target.value;\r\n\r\n        // TODO: Might want to revise second condition\r\n        if (event.target.type == \"number\" || !isNaN(event.target.value)) {\r\n            new_value = parseFloat(new_value);\r\n        }\r\n\r\n        temp[event.target.id] = new_value;\r\n        this.setState({ car: temp });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.addCar(this.state.car);\r\n        event.preventDefault(); // Stop reloading page\r\n\r\n        // Reset car\r\n        this.setState({ car: new Car() });\r\n    }\r\n\r\n    fuelOption(type: FuelType) {\r\n        return <option value={type}>{fuelString(type)}</option>;\r\n    }\r\n\r\n    render() {\r\n        var errorMessage;\r\n\r\n        if (this.state.error) {\r\n             errorMessage = <p>Car with the same name already exists.</p>;\r\n        }\r\n\r\n        return <form onSubmit={this.handleSubmit} id=\"addCar\">\r\n            {errorMessage}\r\n\r\n            <div className=\"form-group\">\r\n                <label>Name\r\n                    <input className=\"form-control\" name=\"Name\" id=\"name\" onChange={this.handleChange} required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>Fuel Type\r\n                        <select className=\"form-control\" name=\"Fuel Type\" id=\"fuelType\" onChange={this.handleChange}>\r\n                            {this.fuelOption(FuelType.regular)}\r\n                            {this.fuelOption(FuelType.mid)}\r\n                            {this.fuelOption(FuelType.premium)}\r\n                            {this.fuelOption(FuelType.diesel)}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>MPG\r\n                    <input className=\"form-control\" type=\"number\" min=\"0\" name=\"MPG\" id=\"mpg\" onChange={this.handleChange} required />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price\r\n                    <input className=\"form-control\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={this.state.car.price}\r\n                        name=\"Price\"\r\n                        id=\"price\"\r\n                        onChange={this.handleChange}\r\n                        required />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Insurance (Monthly)\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.insurance}\r\n                            name=\"Insurance\"\r\n                            id=\"insurance\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Vehicle Registration\r\n                        <input className=\"form-control\"\r\n                            type=\"number\"\r\n                            value={this.state.car.registration}\r\n                            name=\"Registration\"\r\n                            id=\"registration\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { MpgCalculator } from \"./components/MPGCalculator\"\r\nimport { Car } from \"./components/Car\"\r\nimport { FuelType } from \"./components/Fuel\"\r\n\r\nlet cars: Array<Car> = [\r\n    new Car({\r\n        'name': '2018 Ford F-150',\r\n        'mpg': 23,\r\n        'price': 27705,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Chevrolet Silverado 1500',\r\n        'mpg': 21,\r\n        'price': 28300,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Ram 1500',\r\n        'mpg': 23,\r\n        'price': 27295,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Toyota RAV4',\r\n        'mpg': 26,\r\n        'price': 24660,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Nissan Rogue',\r\n        'mpg': 29,\r\n        'price': 24800,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n    new Car({\r\n        'name': '2018 Toyota Camry',\r\n        'mpg': 34,\r\n        'price': 23645,\r\n        'fuelType': FuelType.regular,\r\n        'insurance': 0,\r\n        'registration': 0\r\n    }),\r\n];\r\n\r\nReactDOM.render(\r\n    <MpgCalculator data={cars} />,\r\n    document.getElementById('root')\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\nimport * as Helpers from \"./helpers\";\r\nimport { FuelType, FuelPrice, GasPriceChanger } from \"./Fuel\";\r\nimport { MileageChanger, MonthChanger } from \"./GraphControls\";\r\nimport { Tabs } from \"./Tabs\";\r\nimport { Table } from \"./Table\";\r\nimport { Car, CarList } from \"./Car\";\r\ndeclare var c3: any;\r\ndeclare var d3: any;\r\n\r\ninterface GraphProps {\r\n    months: number;\r\n    annualMileage: number;\r\n    ppg: FuelPrice;\r\n    data: Array<Car>;\r\n}\r\n\r\ninterface GraphData {\r\n    x: string;\r\n    columns: Array< Array<number|string> >;\r\n};\r\n\r\nclass Graph extends React.Component<GraphProps> {\r\n    componentDidMount() {\r\n        // Force a render() call which will allow chart to show up\r\n        // Without this, react will call c3.generate() before #chart has been created,\r\n        // meaning that there is no HTML dom element to bind graph to, so it won't show.\r\n        this.updateChart();\r\n    }\r\n\r\n    updateChart() {\r\n        c3.generate({\r\n            bindto: '#chart',\r\n            data: this.makeData(this.props.data),\r\n            axis: {\r\n                x: {\r\n                    label: 'Months Driven'\r\n                },\r\n                y: {\r\n                    label: 'Cost'\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    makeData(data: Array<Car>) {\r\n        // Process car data and generate cost of ownership\r\n        let graphData: GraphData = {\r\n            x: 'x', // Mile increments\r\n            columns: [\r\n                Array<number | string>('x').concat(\r\n                    Helpers.range(0, this.props.months)),\r\n            ]\r\n        };\r\n        \r\n        for (var i in data) {\r\n            const car = data[i];\r\n            const monthlyMileage = this.props.annualMileage / 12;\r\n\r\n            let cost: Array<any> = [\r\n                car.name\r\n            ];\r\n            \r\n            // Cost of car at months[j] months\r\n            for (var m = 0; m < this.props.months; m++) {\r\n                cost.push(car.costToDriveMonth(\r\n                    monthlyMileage, m, this.props.ppg));\r\n            }\r\n            \r\n            graphData.columns.push(cost);\r\n        }\r\n        \r\n        return graphData;\r\n    }\r\n    \r\n    render() {\r\n        this.updateChart();\r\n        return <div id=\"chart\"></div>\r\n    }\r\n}\r\n\r\n// Overall controller for all other components\r\nexport interface MpgCalculatorProps {\r\n    data: Array<Car>;\r\n};\r\n\r\nexport interface MpgCalculatorState {\r\n    data: Array<Car>;\r\n    ppg: FuelPrice;\r\n    months: number;\r\n    annualMileage: number;\r\n    activeTab: string;\r\n};\r\n\r\nexport class MpgCalculator extends React.Component<MpgCalculatorProps, MpgCalculatorState> {\r\n    constructor(props: MpgCalculatorProps) {\r\n        super(props);\r\n\r\n        let temp_ppg: FuelPrice = new Map([\r\n            [FuelType.regular, 2.87],\r\n            [FuelType.mid, 3.15],\r\n            [FuelType.premium, 3.4],\r\n            [FuelType.diesel, 3.18]\r\n        ]);\r\n        \r\n        this.state = {\r\n            data: props.data,\r\n            ppg: temp_ppg,\r\n            months: 48,\r\n            annualMileage: 12000,\r\n            activeTab: \"Chart\"\r\n        };\r\n\r\n        this.updateGasPrice = this.updateGasPrice.bind(this);\r\n        this.updateMileage = this.updateMileage.bind(this);\r\n        this.updateMonths = this.updateMonths.bind(this);\r\n        this.addCar = this.addCar.bind(this);\r\n        this.removeAll = this.removeAll.bind(this);\r\n        this.removeCar = this.removeCar.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n    \r\n    updateGasPrice(_ppg: FuelPrice) {\r\n        this.setState({\r\n            ppg: _ppg\r\n        });\r\n    }\r\n\r\n    updateMileage(mileage: number) {\r\n        this.setState({\r\n            annualMileage: mileage\r\n        });\r\n    }\r\n\r\n    updateMonths(_months: number) {\r\n        this.setState({\r\n            months: _months\r\n        });\r\n    }\r\n    \r\n    addCar(data: Car) {\r\n        // Add car listing\r\n        // Returns false if car with same name already exists\r\n\r\n        for (let i in this.state.data) {\r\n            if (this.state.data[i].name == data.name) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var temp = this.state.data;\r\n        temp.push(data);\r\n        \r\n        this.setState({\r\n            data: temp\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    removeAll() {\r\n        // Remove all car listings\r\n        this.setState({ data: [] });\r\n    }\r\n\r\n    removeCar(name: string) {\r\n        // Remove car listings by name\r\n        var temp = [];\r\n        \r\n        for (var j in this.state.data) {\r\n            if (name != this.state.data[j].name) {\r\n                temp.push(this.state.data[j]);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            data: temp\r\n        });\r\n    }\r\n\r\n    setActive(name: string) {\r\n        this.setState({\r\n            activeTab: name\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const tabItems: Array<string> = [\r\n            \"Chart\", \"Table\"\r\n        ];\r\n\r\n        let body;\r\n        \r\n        if (this.state.activeTab == \"Chart\") {\r\n            body = <div>\r\n                <Graph\r\n                    annualMileage={this.state.annualMileage}\r\n                    months={this.state.months}\r\n                    data={this.state.data}\r\n                    ppg={this.state.ppg}\r\n                />\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    alignContent: 'space-around',\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <div style={{ width: '72.5%' }}>\r\n                        <MileageChanger mileage={this.state.annualMileage} updateMileage={this.updateMileage} />\r\n                    </div>\r\n                    <div style={{width: '22.5%'}}>\r\n                        <MonthChanger months={this.state.months} updateMonths={this.updateMonths} />\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n        } else {\r\n            body = <Table\r\n                annualMileage={this.state.annualMileage}\r\n                months={this.state.months}\r\n                data={this.state.data}\r\n                ppg={this.state.ppg}\r\n            />;\r\n        }\r\n\r\n        return <div className=\"container-fluid\">\r\n            <h1>Automobile Cost Calculator</h1>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"card\" id=\"graph-panel\">\r\n                        <div className=\"card-header\">\r\n                            <Tabs items={tabItems}\r\n                                activeItem={this.state.activeTab}\r\n                                setActive={this.setActive}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {body}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <GasPriceChanger ppg={this.state.ppg} updateGasPrice={this.updateGasPrice} />\r\n                    <CarList data={this.state.data}\r\n                        addCar={this.addCar}\r\n                        removeAll={this.removeAll}\r\n                        removeCar={this.removeCar} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Modal } from \"./Modal\";\r\n\r\ninterface InfoBoxProps {\r\n    children?: any;\r\n    title: string;\r\n}\r\n\r\ninterface InfoBoxState {\r\n    modalVisible: boolean;\r\n}\r\n\r\nexport class InfoBox extends React.Component<InfoBoxProps, InfoBoxState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalVisible: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ display: 'inline', float: 'right' }}>\r\n            <Modal\r\n                title={this.props.title}\r\n                triggerText=\"?\"\r\n                visible={this.state.modalVisible}>\r\n                {this.props.children}\r\n            </Modal>\r\n        </div>;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface MonthChangerProps {\r\n    months: number;\r\n    updateMonths: any;\r\n}\r\n\r\nexport class MonthChanger extends React.Component<MonthChangerProps, { months: number }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            months: this.props.months\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const _months = event.target.value;\r\n\r\n        this.setState({\r\n            months: _months\r\n        });\r\n\r\n        this.props.updateMonths(_months);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Months\" id=\"months\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                type=\"number\"\r\n                value={this.state.months}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"months\" className=\"col-sm col-form-label\">\r\n                <b>Months to Show</b>\r\n            </label>\r\n        </form>\r\n    }\r\n}\r\n\r\nclass MileageChangerProps {\r\n    mileage: number;\r\n    updateMileage: any;\r\n}\r\n\r\nexport class MileageChanger extends React.Component<\r\n    MileageChangerProps, { mileage: number }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mileage: 12000\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const _mileage = event.target.value;\r\n\r\n        this.setState({\r\n            mileage: _mileage\r\n        });\r\n\r\n        this.props.updateMileage(_mileage);\r\n    }\r\n\r\n    render() {\r\n        return <form>\r\n            <input className=\"form-control\" name=\"Mileage\" id=\"mileage\"\r\n                min=\"0\"\r\n                max=\"100000\"\r\n                type=\"range\"\r\n                value={this.state.mileage}\r\n                onChange={this.handleChange}\r\n            />\r\n            <label htmlFor=\"mileage\" className=\"col-sm col-form-label\">\r\n                <b>Miles Per: </b>\r\n                Year: {this.state.mileage} &nbsp;\r\n                Month: {Math.round(this.state.mileage / 12)} &nbsp;\r\n                Day: {Math.round(this.state.mileage / 365)} \r\n            </label>\r\n        </form>\r\n    }\r\n}","// Tab controller and navigation\r\n\r\nimport * as React from \"react\";\r\n\r\ninterface TabItemProps {\r\n    name: string;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class TabItem extends React.Component<TabItemProps> {\r\n    render() {\r\n        let className: string = \"nav-link\";\r\n        if (this.props.activeItem == this.props.name) {\r\n            className = \"nav-link active\";\r\n        }\r\n\r\n        return <li className=\"nav-item\">\r\n            <a\r\n                className={className}\r\n                onClick={this.props.setActive}\r\n                data-name={this.props.name}\r\n            >{this.props.name}</a>\r\n        </li>;\r\n    }\r\n}\r\n\r\ninterface TabProps {\r\n    items: Array<string>;\r\n    activeItem: string;\r\n    setActive: any;\r\n}\r\n\r\nexport class Tabs extends React.Component<TabProps, { activeItem: string }> {\r\n    constructor(props: TabProps) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: this.props.activeItem\r\n        };\r\n\r\n        this.setActive = this.setActive.bind(this);\r\n    }\r\n\r\n    setActive(event) {\r\n        const newTab: string = event.target.dataset.name;\r\n\r\n        // pass name of new active tab back up\r\n        this.props.setActive(newTab);\r\n    }\r\n\r\n    render() {\r\n        return <ul className=\"nav nav-tabs card-header-tabs\">\r\n            {\r\n                this.props.items.map((i) => <TabItem\r\n                    name={i}\r\n                    activeItem={this.props.activeItem}\r\n                    setActive={this.setActive}\r\n                />)\r\n            }\r\n        </ul>\r\n    }\r\n}","import * as React from \"react\";\r\nimport { FuelPrice } from \"./Fuel\";\r\nimport { Car } from \"./Car\";\r\nimport { money } from \"./helpers\";\r\n\r\ninterface TableProps {\r\n    months: number;\r\n    annualMileage: number;\r\n    ppg: FuelPrice;\r\n    data: Array<Car>;\r\n}\r\n\r\nexport class Table extends React.Component<TableProps> {\r\n    render() {\r\n        const ppg = this.props.ppg;\r\n\r\n        return <table>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th colSpan={4}>Cost to Drive (Gas Only)</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>10 Miles</th>\r\n                    <th>25 Miles</th>\r\n                    <th>100 Miles</th>\r\n                    <th>One Month</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.props.data.map((i) =>\r\n                <tr>\r\n                    <td>{i.name}</td>\r\n                    <td>{money(i.costToDriveGasOnly(10, ppg))}</td>\r\n                    <td>{money(i.costToDriveGasOnly(25, ppg))}</td>\r\n                    <td>{money(i.costToDriveGasOnly(100, ppg))}</td>\r\n                    <td>{money(i.costToDriveGasOnly(this.props.annualMileage / 12, ppg))}</td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import * as React from \"react\";\r\n\r\ninterface CardProps {\r\n    header: any;\r\n    children: any;\r\n}\r\n\r\nexport class MinimizableCard extends React.Component<CardProps, {\r\n    minimized: boolean\r\n}> {\r\n    // A card that can be minimized\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.minimize = this.minimize.bind(this);\r\n\r\n        this.state = {\r\n            'minimized': false\r\n        };\r\n    }\r\n\r\n    minimize() {\r\n        this.setState({\r\n            'minimized': !this.state['minimized']\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const minimized = this.state['minimized'];\r\n        var children = <div className=\"card-body\">\r\n            {this.props.children}\r\n        </div>;\r\n\r\n        if (minimized) {\r\n            children = null;\r\n        }\r\n\r\n        return <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.minimize}>\r\n                    Minimize\r\n                </button>\r\n\r\n                {this.props.header}\r\n            </div>\r\n\r\n            {children}\r\n        </div>\r\n    }\r\n}"],"sourceRoot":""}